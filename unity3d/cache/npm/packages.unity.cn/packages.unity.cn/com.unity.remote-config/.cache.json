{
  "dist-tags": {
    "latest": "4.2.2"
  },
  "versions": {
    "4.2.2": {
      "name": "com.unity.remote-config",
      "version": "4.2.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.remote-config-runtime": "4.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@4.2/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "2b77a20bf30710e4008c1070d5e4d8e1a9bb183f",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-4.2.2.tgz"
      },
      "samples": [
        {
          "path": "Samples~/RemoteConfigDeployment",
          "description": "This is a simple sample to deploy and call a Remote Config asset.",
          "displayName": "Remote Config Deployment"
        }
      ],
      "_upm": {
        "changelog": "Fixed\n- Fixed assets being loaded despite being of the incorrect type",
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/settings/general",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid"
        }
      }
    },
    "4.2.1": {
      "name": "com.unity.remote-config",
      "version": "4.2.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.remote-config-runtime": "4.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@4.2/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "6a34c115290691a7189159d49e2d12f5cf4ab093",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-4.2.1.tgz"
      },
      "samples": [
        {
          "path": "Samples~/RemoteConfigDeployment",
          "description": "This is a simple sample to deploy and call a Remote Config asset.",
          "displayName": "Remote Config Deployment"
        }
      ],
      "_upm": {
        "changelog": "Added\n- Button in inspector to open Remote Config dashboard.\n- Button in inspector to select the Remote Config object in the Deployment Window.\n- Context menu in Deployment Window for Remote Config files to open dashboard.\n- Exposed configuration models used for Deployment\n- Updated docs\n- Updated yml files, added version 6000.0 in environments.metadata",
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/settings/general",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid"
        }
      }
    },
    "4.1.1": {
      "name": "com.unity.remote-config",
      "version": "4.1.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "4.0.2"
      },
      "unity": "2021.3",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/settings/general",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid"
        },
        "changelog": "Added\n- Added Hello World sample"
      },
      "samples": [
        {
          "displayName": "Remote Config Deployment",
          "description": "This is a simple sample to deploy and call a Remote Config asset.",
          "path": "Samples~/RemoteConfigDeployment"
        }
      ],
      "relatedPackages": {
        "com.unity.remote-config.tests": "4.1.1"
      },
      "upmCi": {
        "footprint": "2bcfbedcacb6e8010bcd11b108d7dabdc0b4f4c3"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@4.1/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "07730ab553fdbf0ba035716e1ac1b484a7d439b7"
      },
      "dist": {
        "shasum": "b11023265b56285e8d0d7614ea5fd355712fd8b3",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-4.1.1.tgz"
      }
    },
    "4.1.0": {
      "name": "com.unity.remote-config",
      "version": "4.1.0",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "4.0.2"
      },
      "unity": "2021.3",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/settings/general",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid"
        },
        "changelog": "Changed\n- Updated `com.unity.remote-config-runtime` dependency to `4.0.2`\n- Added apple privacy manifest in the Remote Config Runtime"
      },
      "relatedPackages": {
        "com.unity.remote-config.tests": "4.1.0"
      },
      "upmCi": {
        "footprint": "eb0f3b7d97d5e823268a060e5476157a978cb957"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@4.1/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "5b0ab8446396428b5f2bc9c1143c828f2cfa2b1d"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "dist": {
        "shasum": "ed76e58a380d117176fa61dc582e859729006e21",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-4.1.0.tgz"
      }
    },
    "4.0.0": {
      "name": "com.unity.remote-config",
      "version": "4.0.0",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "4.0.1"
      },
      "unity": "2021.3",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/settings/general",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid"
        },
        "changelog": "Changed\n- Dropping support for Unity 2019 & 2020, minimum Editor version is now 2021.3\n- Updated `com.unity.remote-config-runtime` dependency to `4.0.1`\n\nFixed\n- Issue deploying a remote-config containing JSON array with the Deployment Window"
      },
      "relatedPackages": {
        "com.unity.remote-config.tests": "4.0.0"
      },
      "upmCi": {
        "footprint": "8c5d4ed2099098d20d4181386b14d1bb403fa7c6"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@4.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "98a58e8d2f21e03168c7a34058a319fdad8bc4ad"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "dist": {
        "shasum": "fcdc569b343f2f7d0fc26e8ac740badcb4cc0c2d",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-4.0.0.tgz"
      }
    },
    "3.3.2": {
      "name": "com.unity.remote-config",
      "version": "3.3.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.1.3"
      },
      "unity": "2019.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/settings/general",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid"
        },
        "changelog": "Changed\n- Updated implementation docs and ExampleSample.cs\n- Updated general support link in the docs\n\nFixed\n- Deployable assets (.rc) not appearing on load in the Deployment Window with Unity 2022+.\n- Fixed deployment error message showing twice when duplicate keys are detected in different .rc file\n- Compile warning was fixed"
      },
      "upmCi": {
        "footprint": "07ae4ca5a7ab388b60a01fda04e15d78b885cd17"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@3.3/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "73fcb662d8f3752356bf580b82c33311d1f5b892"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "dist": {
        "shasum": "ed61b99f81de88312a48ee2f0d50df27547c98d6",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.3.2.tgz"
      }
    },
    "2.1.3-exp.11": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.11",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.8"
      },
      "unity": "2018.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/remote-config/",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@2.1/manual/index.html"
        },
        "changelog": "- Updated implementation docs and ExampleSample.cs"
      },
      "upmCi": {
        "footprint": "3a4f5c17d665e73f2d5bbd04ae7a9ac685d02665"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@2.1/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "17d9f4e1988e9be0c772ec61ef4f2210b2c034d4"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "dist": {
        "shasum": "fe15a2f7165e81d152892f9f66bd3fb0ba4d0d5c",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.11.tgz"
      }
    },
    "2.1.3-exp.10": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.10",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.8"
      },
      "unity": "2018.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/remote-config/",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@2.1/manual/index.html"
        },
        "changelog": "- Updated general support link in the docs"
      },
      "upmCi": {
        "footprint": "ddce0c8b1808c3bf0d83ee0c75205984dc46657b"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@2.1/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "a1fbfc746a514530c1724c17d4106127ae852f2b"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "dist": {
        "shasum": "fe6b42555bd95af26e867924ca5186dc60d2353a",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.10.tgz"
      }
    },
    "1.4.0-preview.8": {
      "name": "com.unity.remote-config",
      "version": "1.4.0-preview.8",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.modules.unityanalytics": "1.0.0"
      },
      "unity": "2018.4",
      "_upm": {
        "changelog": "- Updated general support link in the docs"
      },
      "upmCi": {
        "footprint": "d7344c62401468085c352ae58fb4b2ba21a83e87"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@1.4/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "46064efaa2a2c11377fd9a969ce217a1c6dfc51c"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "dist": {
        "shasum": "6275006dd0f7c81c4d09eae9bbe729fb6b38edec",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.4.0-preview.8.tgz"
      }
    },
    "3.3.1": {
      "name": "com.unity.remote-config",
      "version": "3.3.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.1.3"
      },
      "unity": "2019.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/settings/general",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@3.2/manual/index.html"
        }
      },
      "upmCi": {
        "footprint": "ab1cfd0ad55c30a004f00dee29dadd0c0a157e40"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@3.3/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "c14790bef217e6666b41e02775f2b346258c3d26"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "dist": {
        "shasum": "38d543c0c5fd803c491312ab116ec8f5417735fe",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.3.1.tgz"
      }
    },
    "3.2.2": {
      "name": "com.unity.remote-config",
      "version": "3.2.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.1.3"
      },
      "unity": "2019.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/settings/general",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@3.2/manual/index.html"
        }
      },
      "upmCi": {
        "footprint": "5887158e4840cfdb55f1e7e6947a7127cb4a7d6a"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "ad938e343896657fd2135a1388d68831cb4f1264"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "dist": {
        "shasum": "ae0f44de00f40442004f5f0c79889ddaedb31266",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.2.2.tgz"
      }
    },
    "2.1.3-exp.9": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.9",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.8"
      },
      "unity": "2018.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/remote-config/",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@2.1/manual/index.html"
        }
      },
      "upmCi": {
        "footprint": "b58925307771d08fda935a5e9da15ef8ba5863aa"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "4f44ec4bbb3c9d39d07bfcd44653d0caa1b6d6d6"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "dist": {
        "shasum": "b2615f6df30e56d80a2482280316bbe405dfb3af",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.9.tgz"
      }
    },
    "2.1.3-exp.8": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.8",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.8"
      },
      "unity": "2018.4",
      "_upm": {
        "changelog": "- adjusting documentation for Game Overrides"
      },
      "upmCi": {
        "footprint": "fd076e5441ff04d09a47f787b2c2249889fc596d"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "8826611c6b946d1638c1e8d558679a73786779e8"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@2.1.3-exp.8",
      "_integrity": "sha512-AxMqPqIeD4vwyJkW9jiwRWrRh6ICi+EW0qAXILcT8gYim9VdLwa+3FUUGnh9cT2tW8cZqC2gxqpwdxbQlUwZJw==",
      "_resolved": "/tmp/com.unity.remote-config@2.1.3-exp.8-p6b3gmqh.tgz",
      "_from": "file:/tmp/com.unity.remote-config@2.1.3-exp.8-p6b3gmqh.tgz",
      "dist": {
        "shasum": "3416d39eda813401878e445b5914db04ccba5c71",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.8.tgz"
      }
    },
    "3.1.3": {
      "name": "com.unity.remote-config",
      "version": "3.1.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.1.3"
      },
      "unity": "2019.4",
      "_upm": {
        "changelog": "- using ENABLE_CLOUD_SERVICES_ANALYTICS flag for platforms using Analytics within 2.x namespace\r\n- Updated `com.unity.remote-config-runtime` dependency to `3.1.3`"
      },
      "upmCi": {
        "footprint": "8dfc5a5d4b7f5e539c5b15b51e054b2b3054209a"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "b673ee2ad29779bbe4deb7592ba9d4a4cb5babf0"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.1.3",
      "_integrity": "sha512-MpU5FTcRRd4ymXZPtOM4WpYYvgifpn7OT28dCHBBr+DLkVuN5qGtzovgaOLAW2Zn3755O+PgyiflZPFvqp0Agw==",
      "_resolved": "/tmp/com.unity.remote-config@3.1.3-ozqr7tpq.tgz",
      "_from": "file:/tmp/com.unity.remote-config@3.1.3-ozqr7tpq.tgz",
      "dist": {
        "shasum": "81712b432b190318ff0e86d6d791294b0e3ae03b",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.1.3.tgz"
      }
    },
    "2.1.3-exp.7": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.7",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.7"
      },
      "unity": "2018.4",
      "_upm": {
        "changelog": "- using ENABLE_CLOUD_SERVICES_ANALYTICS flag for platforms using Analytics within 2.x namespace"
      },
      "upmCi": {
        "footprint": "44333f6749b22e3f35a0ead619441184468e73ed"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "9aaca839fb8d86617d5b88211e81031d1480da12"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@2.1.3-exp.7",
      "_integrity": "sha512-s3P+D+J/5m2M3fnWaIGAFppYGstws+1tmDHV2/l4h0tuwOU+boeAsItSnUYXlNvWaF8NsEZosIWXPaW71ccuKQ==",
      "_resolved": "/tmp/com.unity.remote-config@2.1.3-exp.7-d82xynls.tgz",
      "_from": "file:/tmp/com.unity.remote-config@2.1.3-exp.7-d82xynls.tgz",
      "dist": {
        "shasum": "b7aa95cc6282d5eeec769aee040db2ba700dbc6d",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.7.tgz"
      }
    },
    "2.1.3-exp.6": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.6",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.6"
      },
      "unity": "2018.4",
      "_upm": {
        "changelog": "- Whitelisting platforms for getting userId from Analytics package within 2.x namespace\r\n- Allowing projectId and userId params to be in the payload for consoles\r\n- Upgraded Newtonsoft version from 3.0.1 to 3.0.2"
      },
      "upmCi": {
        "footprint": "9af43bebedd5515e300a480174264e773e2d503e"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "dfba9a39d57ce728008763c5fadcc41e55fe0eca"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@2.1.3-exp.6",
      "_integrity": "sha512-y3XE4pHqqqVftHlfS1nNmayf36kSEc2zO1A6wC2MlR0UdWKtcin2/9zY6ydG6DGo3xOYvAmo4oK3gofThjFSCg==",
      "_resolved": "/tmp/com.unity.remote-config@2.1.3-exp.6-o9mdsrph.tgz",
      "_from": "file:/tmp/com.unity.remote-config@2.1.3-exp.6-o9mdsrph.tgz",
      "dist": {
        "shasum": "168b9721539b13814c740d69bf6ccc4523a6e41a",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.6.tgz"
      }
    },
    "3.1.0": {
      "name": "com.unity.remote-config",
      "version": "3.1.0",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.1.0"
      },
      "unity": "2019.4",
      "_upm": {
        "changelog": "- Updated `com.unity.services.core` dependency from `1.3.2` to `1.4.0`\r\n- Updated `com.unity.remote-config-runtime` dependency to `3.1.0`\r\n- Added 2.x namespace and corresponding API's for backward compatibility with 2.x implementation\r\n- Promote Candidate Experimental package to Verified Production"
      },
      "upmCi": {
        "footprint": "81990a8ffc93c2f921f5aebd6d2edbc1142697a7"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "7fb6a401f558f6a37dc1e392b472a054cf393fc4"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.1.0",
      "_integrity": "sha512-AnbSO9W5O9DrYiZiPXRZi+ZW+4X3na+BXAsfRlbr68ObLtIRLDw/bO532HE8GLuVRSzDo3HU+pw3V9b+U8HgCg==",
      "_resolved": "/tmp/com.unity.remote-config@3.1.0-a_i768x5.tgz",
      "_from": "file:/tmp/com.unity.remote-config@3.1.0-a_i768x5.tgz",
      "dist": {
        "shasum": "5ca7f772ed2650e0a835b7a2bfbcba8db083b177",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.1.0.tgz"
      }
    },
    "3.0.0": {
      "name": "com.unity.remote-config",
      "version": "3.0.0",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0"
      },
      "unity": "2019.4",
      "_upm": {
        "changelog": "- Updated `com.unity.services.core` dependency from `1.3.1` to `1.3.2`\r\n- Updated `com.unity.remote-config-runtime` dependency to `3.0.0`\r\n- Updated SDK documentation\r\n- Promote Candidate Experimental package to Verified Production"
      },
      "upmCi": {
        "footprint": "f890b1e6dbae477faa95be95da704b449783f74c"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "7e64c1a38482435b0b0ec9f5d1e0fad706545479"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0",
      "_integrity": "sha512-3lyag98h3dLkmZeN+TCvqRE4OXrc9bKTm5iXF+PQvG5ENOhYo1gWEUd3zuqyz2LDLElPvcWK/GMT7D/hxBMCHA==",
      "_resolved": "/tmp/com.unity.remote-config@3.0.0-5fodrjzb.tgz",
      "_from": "file:/tmp/com.unity.remote-config@3.0.0-5fodrjzb.tgz",
      "dist": {
        "shasum": "f6c86efdf69d5ea918777d7b9b15e614b8df8dbb",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0.tgz"
      }
    },
    "3.0.0-pre.15": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.15",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.29"
      },
      "unity": "2019.4",
      "upm": {
        "changelog": "- Updated `com.unity.remote-config-runtime` dependency to `3.0.0-pre.29`\r\n- Updated `com.unity.services.core` dependency from `1.2.0` to `1.3.1`\r\n- Updated `com.unity.nuget.newtonsoft-json` dependency from `3.0.1` to `3.0.2`"
      },
      "upmCi": {
        "footprint": "9d6e922a89fe569ed8ce677f10994fb34d863fd6"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "150ed1f758b2d343e83431244db2a38a6aa39bb5"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.15",
      "_integrity": "sha512-Nlu8tMHHFRHM60T3Nah5WBgvuR5nu3RvV6mh7LZV6mUs8KNO52415fR/fKmRnvOB1BUQjsc1rI/ahtgFbTl9LA==",
      "_resolved": "/tmp/com.unity.remote-config@3.0.0-pre.15-e0p6jeyr.tgz",
      "_from": "file:/tmp/com.unity.remote-config@3.0.0-pre.15-e0p6jeyr.tgz",
      "dist": {
        "shasum": "488a402823f7fd6ff4cfc6dfbd95abf53cb66dd9",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.15.tgz"
      }
    },
    "3.0.0-pre.14": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.14",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.1",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.28"
      },
      "unity": "2019.4",
      "upm": {
        "changelog": "- Added `RemoteConfigService.Instance` as an access pattern in Remote Config Runtime instead of static class `ConfigManager`\r\n- Added API Updater [Obsolete] for ConfigManager\r\n- Remote Config Runtime namespace changed from `Unity.RemoteConfig` to `Unity.Services.RemoteConfig`\r\n- Updated com.unity.remote-config-runtime dependency to 3.0.0-pre.28"
      },
      "upmCi": {
        "footprint": "94dc3d5538c0f20b076bdadf81f509acf880cf49"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "ced0063e4de580a1f45bbffa393491d825152e09"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.14",
      "_integrity": "sha512-knXQkTI/rfxm5+E/py7L3k7pyPVUyCwVf0ceFoNvCizHbLB2A+Dm+u3kOkx932fNFMWlLwfP5ADBAzBQyaARhQ==",
      "_resolved": "/tmp/com.unity.remote-config@3.0.0-pre.14-omyey81o.tgz",
      "_from": "file:/tmp/com.unity.remote-config@3.0.0-pre.14-omyey81o.tgz",
      "dist": {
        "shasum": "0484ed9177958e414210d25d23bfae4dfe341687",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.14.tgz"
      }
    },
    "2.1.3-exp.4": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.4",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.1",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.4"
      },
      "unity": "2018.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/remote-config/",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@2.1/manual/index.html"
        }
      },
      "upm": {
        "changelog": "- Fixed bug for origin value if there is no internet"
      },
      "upmCi": {
        "footprint": "4fdb9b8ca45ebd557c728e67b8210adb58d16a0f"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "01fa6494f8a8c210c872dca68541fa3aaf431ec5"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@2.1.3-exp.4",
      "_integrity": "sha512-76CzIQfb7Wd65wWg+KHXlnm3DqYfi9WSOVIaxyNUVSZX+BiqFVTKxzxTvKzRQXdw1B+mKKPkB6YBk381c+g7iQ==",
      "_resolved": "/tmp/com.unity.remote-config@2.1.3-exp.4-dg5udsf1.tgz",
      "_from": "file:/tmp/com.unity.remote-config@2.1.3-exp.4-dg5udsf1.tgz",
      "dist": {
        "shasum": "24194f22a30de7b1f6c57e6ef5428144ce490619",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.4.tgz"
      }
    },
    "3.0.0-pre.13": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.13",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.1",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.27"
      },
      "unity": "2019.4",
      "upm": {
        "changelog": "- Fixed bug for origin value if there is no internet,- Updated com.unity.remote-config-runtime dependency to 3.0.0-pre.27"
      },
      "upmCi": {
        "footprint": "1f88d2f4de8c826289e23c8f3644db8c7a17fc47"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "db3eafc875ec28778389c78ddad0deb09e998ad9"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.13",
      "_integrity": "sha512-52Ixlru8WLhSlx403Eb90Z0G5nm4nYpoy+/fz8zfWB/GYBKTWRyvph10yPIJhNLzCdKpv3MNAlJZitLdzH/6DA==",
      "_resolved": "/tmp/com.unity.remote-config@3.0.0-pre.13-7mjj14lq.tgz",
      "_from": "file:/tmp/com.unity.remote-config@3.0.0-pre.13-7mjj14lq.tgz",
      "dist": {
        "shasum": "8b56a968204d79d18aec5dc4887ec1ac1451bc8f",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.13.tgz"
      }
    },
    "2.1.3-exp.3": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.1",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.3"
      },
      "unity": "2018.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/remote-config/",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@2.1/manual/index.html"
        }
      },
      "upm": {
        "changelog": "- Upgraded Newtonsoft version from 2.0.2 to 3.0.1,- Updated documentation regarding metadata parameters within web response"
      },
      "upmCi": {
        "footprint": "50669fbc489ff074a3972b60d8ff4e2a27562f4b"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "886086dc2dce453c77f6f96d90fdb7faf5051557"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@2.1.3-exp.3",
      "_integrity": "sha512-FlHXwYlWgLSHY7nHR4eQwRMnSwJYDA0g+LFQyQTj4wHRRRaRKtJ+p5er1XoPorSnlZs/gG8BEI3WHTGcJZMfpg==",
      "_resolved": "/tmp/com.unity.remote-config@2.1.3-exp.3-xqtmok7e.tgz",
      "_from": "file:/tmp/com.unity.remote-config@2.1.3-exp.3-xqtmok7e.tgz",
      "dist": {
        "shasum": "54eb6316638b99b4a620ffaf03d9bd7f9f967a63",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.3.tgz"
      }
    },
    "3.0.0-pre.12": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.12",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "3.0.1",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.26"
      },
      "unity": "2019.4",
      "upm": {
        "changelog": "- Upgraded Newtonsoft version from 2.0.2 to 3.0.1,- Updated com.unity.remote-config-runtime dependency to 3.0.0-pre.26,- Updated documentation regarding metadata parameters within web response"
      },
      "upmCi": {
        "footprint": "bdfb1adadf7cd4a4c916bb8db64f464aa4975950"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "12289c49dacc32783543cd94bcb11e6187279091"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.12",
      "_integrity": "sha512-vyjjtNuXoBk4aR50kZ2nwmf6lF3+p7pQCh0BeuoMUIQThmtoxLbymOs27skrj/jecl/lgjt/pzYff/YV39OdCA==",
      "_resolved": "/tmp/com.unity.remote-config@3.0.0-pre.12-fv1o4a1j.tgz",
      "_from": "file:/tmp/com.unity.remote-config@3.0.0-pre.12-fv1o4a1j.tgz",
      "dist": {
        "shasum": "e2ec82554fb2dcbe8ab600eb98a9bd17d5a13f0e",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.12.tgz"
      }
    },
    "2.1.3-exp.2": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.2"
      },
      "unity": "2018.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/remote-config/",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@2.1/manual/index.html"
        }
      },
      "upm": {
        "changelog": "- Changed encoding from ASCII to UTF8 when reading from cache file,- Bypassing cache mechanism for consoles,- Refactored unit tests to reflect bypassing cache for consoles and support multiple configs,- Updated useCasesUrl in package.json,- FetchCompleted callback works within the app for multiple configs,- Updated unit tests to use standard c# `while (!condition) yield return null` instead of Unity's `WaitUntil()`,- Utilized configAssignmentHash parameter in the request in order to ensure persistent config in response,- Updated delivery endpoint from `https://remote-config-prd.uca.cloud.unity3d.com/settings` to `https://config.unity3d.com/settings`,- Set userId to non-null value so it can work for consoles, added SetUserId() method in ConfigManager,- Fixed bug for successive requests with different config types"
      },
      "upmCi": {
        "footprint": "ddb961e1a9ed5de2db5e156d7d2357835fde3d8d"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "6e0fc7df590351776c16fb4ba13cb55f271ff8bf"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@2.1.3-exp.2",
      "_integrity": "sha512-H/GYOJf6/fZ4mBUmJCg9kmWTmYLfEJ7aCnJbrLBlOv7wAazqgUtt7pwmpUEb4scYOXVaImlu1nPBO8cQXuO/Fg==",
      "_resolved": "/tmp/com.unity.remote-config@2.1.3-exp.2-mlbg44c5.tgz",
      "_from": "file:/tmp/com.unity.remote-config@2.1.3-exp.2-mlbg44c5.tgz",
      "dist": {
        "shasum": "46477aa347f2a3a0b23d1df00c173c3298c65549",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.2.tgz"
      }
    },
    "3.0.0-pre.11": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.11",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.25"
      },
      "unity": "2019.4",
      "upmCi": {
        "footprint": "338013f3403f45fe062d20ab7bbd248c6153627f"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "c2cc1d7ddba665ebe87c200bf5d41098dd3ea76c"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.11",
      "_integrity": "sha512-o0UDrV761epU194MQ0W3O9TQkpwf6xhWAIpT/niirEt4WftUDB2ixKzMHAi0nAD+GNby+4n87fXFJMOqzqEieQ==",
      "_resolved": "/tmp/com.unity.remote-config@3.0.0-pre.11-47gczven.tgz",
      "_from": "file:/tmp/com.unity.remote-config@3.0.0-pre.11-47gczven.tgz",
      "dist": {
        "shasum": "3824d64097dd0ba4c6718b098a49cbf2ef6d498c",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.11.tgz"
      }
    },
    "3.0.0-pre.10": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.10",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "target",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "conditions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.23"
      },
      "unity": "2019.4",
      "upmCi": {
        "footprint": "ec904a77336cc50e22153800693f39960c1c3ba2"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "bf353c0fbc17529ddae3abf6f10c58e62268e788"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.10",
      "_integrity": "sha512-kpLIQwOim8AxriqFkCvHzNWPCWe+Iaz4zCCyheE/1TgyWnpRa04Pv0aU5IZevIRsbA/WWCGn/nfWklPRyWVitQ==",
      "_resolved": "/tmp/com.unity.remote-config@3.0.0-pre.10-7jjys5du.tgz",
      "_from": "file:/tmp/com.unity.remote-config@3.0.0-pre.10-7jjys5du.tgz",
      "dist": {
        "shasum": "122e5cccf2cb6b4780b4a22bda4f731265500265",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.10.tgz"
      }
    },
    "3.0.0-pre.9": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.9",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.19"
      },
      "unity": "2019.4",
      "upmCi": {
        "footprint": "e15d5072a51c2033df07606ab11c722a2a64101a"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "00afdd26a5ba851a936180e2955c7cf03f21ddba"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.9",
      "_integrity": "sha512-s1Sd73FvC6esmZZibbDcL4WsvPtcdqZR3hbnRfUubUcxaQ7TgkuqsR080/nhvu2BANxB9pGOzSMHI6e/aDN3Nw==",
      "_resolved": "/pkgprom/com.unity.remote-config-3.0.0-pre.9.tgz",
      "_from": "file:com.unity.remote-config-3.0.0-pre.9.tgz",
      "dist": {
        "shasum": "5d58c0a84cfe60fc4e36022329b905852da6a56a",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.9.tgz"
      }
    },
    "3.0.0-pre.8": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.8",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.17"
      },
      "unity": "2019.4",
      "upmCi": {
        "footprint": "6e83e4259400af14ed9ba4b72a5d538670c5f846"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "d42009f1a3d17031ab1c08aeb83bd348abf74d2f"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.8",
      "_integrity": "sha512-fThn7OWv/RxSg0Yw1852to2uSYfwN0y4a33dQWwxotMZsq8xw94Kp1wHe/MEtGmSrS/8XnRaITIslxQzwbne2A==",
      "_resolved": "/pkgprom/com.unity.remote-config-3.0.0-pre.8.tgz",
      "_from": "file:com.unity.remote-config-3.0.0-pre.8.tgz",
      "dist": {
        "shasum": "34fd70caf1d2fa8c035ff9bc33e8e2e572d09667",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.8.tgz"
      }
    },
    "3.0.0-pre.7": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.7",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.16"
      },
      "unity": "2019.4",
      "upmCi": {
        "footprint": "8428fb1e48a3f01360f637dca3b77e5984ac472e"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "1ee226c3d57dbb3fe768a9c4c500a0d51c1b2036"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.7",
      "_integrity": "sha512-cENgiIVhsoIGMHaUA94z8MpmSePpXeBgJIxO40UuYkYEBLYfnEOMByh0/8EP3aNtk15mtNCF2qAnbGsIMsOICw==",
      "_resolved": "/pkgprom/com.unity.remote-config-3.0.0-pre.7.tgz",
      "_from": "file:com.unity.remote-config-3.0.0-pre.7.tgz",
      "dist": {
        "shasum": "0feec827decb9d749c7ee6b5b6d6b1ad5c00c267",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.7.tgz"
      }
    },
    "3.0.0-pre.6": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.6",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.15"
      },
      "unity": "2019.4",
      "upmCi": {
        "footprint": "c384387b879e6dc6e9428521bed379f5a0cde729"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "e8939e0b2d095901db8f0a668ffd2581800a4236"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.6",
      "_integrity": "sha512-/RfpLJUmcs2eUk/I/YUzBXYlvYuJnO8s5vnjPPg38ez0cdmfhWwvwudQhfoM7+na7WM8HIm84w+CHmDD/CT2kA==",
      "_resolved": "/pkgprom/com.unity.remote-config-3.0.0-pre.6.tgz",
      "_from": "file:com.unity.remote-config-3.0.0-pre.6.tgz",
      "dist": {
        "shasum": "117126dd3c476ecd50a9f1f1850579bbb8deddef",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.6.tgz"
      }
    },
    "2.1.3-exp.1": {
      "name": "com.unity.remote-config",
      "version": "2.1.3-exp.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.2",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.3-exp.1"
      },
      "unity": "2018.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/remote-config/",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@latest"
        }
      },
      "upmCi": {
        "footprint": "c5c185265b7fa41e2b3382057953bf272c3d857a"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "265546e143d4de66ce47670c31015d87d3ede2e6"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@2.1.3-exp.1",
      "_integrity": "sha512-NmTtr9o8un00DezazeaG72sR3qkO2hIqXwOi5aVSYH3OsOAxzTY1VB99hCYPqWOcl85Yht9JsvMYW++TwtwvgA==",
      "_resolved": "/pkgprom/com.unity.remote-config-2.1.3-exp.1.tgz",
      "_from": "file:com.unity.remote-config-2.1.3-exp.1.tgz",
      "dist": {
        "shasum": "b2777d2995261c4e6c6eea30919f682aecf9b04a",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.3-exp.1.tgz"
      }
    },
    "3.0.0-pre.5": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.5",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.13"
      },
      "unity": "2019.4",
      "upmCi": {
        "footprint": "8944638684c7d940ea0c15b1dac10cde9aff23ee"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "efc13c6b551fe7fce71c9d2dc4634bb9868cee7d"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@3.0.0-pre.5",
      "_integrity": "sha512-clJ/6+0DUkiqkfLa46XUwe7xtK3oydTeBkzeu1OvuijKV099lEwccW/0ntd1mZQ8LJAfDYO/nBks4HSsKkZ8Ng==",
      "_resolved": "/pkgprom/com.unity.remote-config-3.0.0-pre.5.tgz",
      "_from": "file:com.unity.remote-config-3.0.0-pre.5.tgz",
      "dist": {
        "shasum": "05517fea37a4041760ccf3f4bee5f13375c40290",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.5.tgz"
      }
    },
    "2.1.2": {
      "name": "com.unity.remote-config",
      "version": "2.1.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.2"
      },
      "unity": "2018.4",
      "_upm": {
        "gameService": {
          "genericDashboardUrl": "https://dashboard.unity3d.com/remote-config",
          "projectDashboardUrl": "https://dashboard.unity3d.com/organizations/{0}/projects/{1}/remote-config/",
          "projectDashboardUrlType": "OrganizationKeyAndProjectGuid",
          "useCasesUrl": "https://docs.unity3d.com/Packages/com.unity.remote-config@latest"
        }
      },
      "upmCi": {
        "footprint": "12f87ab8c558e4e18eeb61563e7dcd55b6130539"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "bb61628a2ca6b61e4adfae944e6f40947a077a07"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@2.1.2",
      "_integrity": "sha512-kqZ00Rz8iMMs/lr4OFx1Ru7CLCo0pSYfdhwlif4I6JNdeP4ArcSmfJtTmlYpSClExI4i0I96LBXvI+JrzvRDzw==",
      "_resolved": "/pkgprom/com.unity.remote-config-2.1.2.tgz",
      "_from": "file:com.unity.remote-config-2.1.2.tgz",
      "dist": {
        "shasum": "6554c64f1f022999efa50286a325a5be35b28962",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.2.tgz"
      }
    },
    "2.1.1": {
      "name": "com.unity.remote-config",
      "version": "2.1.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n   - Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.1.1"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "a1a223dc48a077832e22fb09a545a7da6a5d0869"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "f318860f06e0b7e042e5275e38bafbb34d7b83c7"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@2.1.1",
      "_integrity": "sha512-r54M9+eFCTFDxV3QHcTQUOarYwBA5LEqJTTWE70ip96oRwYg/nfCpC0gXjr6LE9XHr6kVxpeqPS6ntsQGUPs+Q==",
      "_resolved": "/pkgprom/com.unity.remote-config-2.1.1.tgz",
      "_from": "file:com.unity.remote-config-2.1.1.tgz",
      "dist": {
        "shasum": "b961fe364a5d898e2aa3665564cf921b297fc338",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.1.tgz"
      }
    },
    "1.4.0-preview.7": {
      "name": "com.unity.remote-config",
      "version": "1.4.0-preview.7",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.modules.unityanalytics": "1.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "977f73633a4a4d9d47fe92b0e2326ace2cb13953"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "e06b79262fde463464dd131a3c072fce1ed55a2e"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_id": "com.unity.remote-config@1.4.0-preview.7",
      "_integrity": "sha512-Kf0l4cMC9H1VHhS6GG+UszAj8RhUzqmL1at/7FnVHGfRg0HydxknvzQTBvN0IyumlXGyUfyTkK/jd78Ph9KNRQ==",
      "_resolved": "/pkgprom/com.unity.remote-config-1.4.0-preview.7.tgz",
      "_from": "file:com.unity.remote-config-1.4.0-preview.7.tgz",
      "dist": {
        "shasum": "82415551f00f64b961026e3a69e0c7ecae2b3edd",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.4.0-preview.7.tgz"
      }
    },
    "3.0.0-pre.4": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.4",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.10"
      },
      "unity": "2019.4",
      "upmCi": {
        "footprint": "0031d0bbaa7de5cb4e6fe7d4f3c34fb89c494ed2"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "3f6f39c66d7db4c37de36af121e62fcbab626960"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-3.0.0-pre.4.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@3.0.0-pre.4",
      "dist": {
        "shasum": "4a89ee5537688f1c0ca43a3353e3266435e82cc9",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.4.tgz"
      }
    },
    "2.1.1-exp.2": {
      "name": "com.unity.remote-config",
      "version": "2.1.1-exp.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n   - Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.0.1-exp.1"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "92d37c74c96d7fbdf31f5ae52461b12d000dd2d9"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "d4754051776d2eeba3d3c426f4f62164b8f7a473"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-2.1.1-exp.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@2.1.1-exp.2",
      "dist": {
        "shasum": "2f5d2081139268f1ec11bd09733057bbeeb7303a",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.1-exp.2.tgz"
      }
    },
    "3.0.0-pre.3": {
      "name": "com.unity.remote-config",
      "version": "3.0.0-pre.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "3.0.0-pre.8"
      },
      "unity": "2019.4",
      "upmCi": {
        "footprint": "b2749630c1fe8ed9d2ddb467045e114030cc75a4"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.remote-config.git",
        "type": "git",
        "revision": "02cbba266b96dbe708a486a46fba82420daac729"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-3.0.0-pre.3.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@3.0.0-pre.3",
      "dist": {
        "shasum": "1fe6cd06f768bf501117e246a5948879bc71cb4e",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-3.0.0-pre.3.tgz"
      }
    },
    "2.1.1-exp.1": {
      "name": "com.unity.remote-config",
      "version": "2.1.1-exp.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "2.0.1-exp.1"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "f2388fe9696758eec38abf4a4c503194b623f155"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "50b7d5bf95e196a0de480e2f58eee20d1af80da0"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-2.1.1-exp.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@2.1.1-exp.1",
      "dist": {
        "shasum": "820bbb37a7ddfa4e0940bf587b55f3d73c8ebec4",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.1-exp.1.tgz"
      }
    },
    "1.4.0-preview.6": {
      "name": "com.unity.remote-config",
      "version": "1.4.0-preview.6",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.modules.unityanalytics": "1.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "7b623503bdaf42877cf39656de30a33aa34d31b4"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "34d2dfd73662ad3e253b7d5b529b2cc2a43673f5"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.4.0-preview.6.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.4.0-preview.6",
      "dist": {
        "shasum": "f67ba535e6241a44642676bdacd38c0cd920e651",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.4.0-preview.6.tgz"
      }
    },
    "2.1.0-exp.2": {
      "name": "com.unity.remote-config",
      "version": "2.1.0-exp.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "1.0.2-exp.1"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "87624d1d73d24235573bd065122cce897e97c391"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "69b6ae99788cc0d318720f6cea4617d961bede13"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-2.1.0-exp.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@2.1.0-exp.2",
      "dist": {
        "shasum": "c7c7d07cd867d41176e19111f7da37ed02f9d849",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.0-exp.2.tgz"
      }
    },
    "2.1.0-exp.1": {
      "name": "com.unity.remote-config",
      "version": "2.1.0-exp.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "1.0.2-exp.1"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "ac8df3d12a2e8cc39bb50ae27c2f8f1199f673cc"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "3e992f3fc6d2519d26a21371fe17d86f04e2ee92"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-2.1.0-exp.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@2.1.0-exp.1",
      "dist": {
        "shasum": "b0c0d59ac01679cd7a61af7e0b32fac628093697",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.1.0-exp.1.tgz"
      }
    },
    "2.0.2-exp.1": {
      "name": "com.unity.remote-config",
      "version": "2.0.2-exp.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.remote-config-runtime": "1.0.2-exp.1"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "1fc0a4788985674590ae007ec7f94169bd1f03e2"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "7c392bc4cec6f0b62724d759e80aa4f51889ae88"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-2.0.2-exp.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@2.0.2-exp.1",
      "dist": {
        "shasum": "a18b5c4bf6db7c6833f8e5a9376b358da9784367",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.0.2-exp.1.tgz"
      }
    },
    "1.4.0-preview.5": {
      "name": "com.unity.remote-config",
      "version": "1.4.0-preview.5",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.modules.unitywebrequest": "1.0.0",
        "com.unity.modules.unityanalytics": "1.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "e3d31febb5536c5d6c65d1a39ae8d71d6bb3a605"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "dc70d524cdc007e5b725ce0b77ff18f9a018aa92"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "This sample example C# file can be used to quickly utilise usage of Remote Config APIs. For more comprehensive code integration, visit https://docs.unity3d.com/Packages/com.unity.remote-config@latest",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.4.0-preview.5.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.4.0-preview.5",
      "dist": {
        "shasum": "b28d3c5da99158d8a6209fe72bf3aceccfde76b2",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.4.0-preview.5.tgz"
      }
    },
    "2.0.1": {
      "name": "com.unity.remote-config",
      "version": "2.0.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.remote-config-runtime": "1.0.1"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "182695e101e0be9be93f94ae354ce8f5bba4cbf7"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "6a3bd8c7dcddeba0ee444ca440ece6d9d417d4de"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@2.0.1",
      "dist": {
        "shasum": "6674528808a94a50f9e5f7a290ff0c4a2f2a38a1",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.0.1.tgz"
      }
    },
    "1.4.0-preview.4": {
      "name": "com.unity.remote-config",
      "version": "1.4.0-preview.4",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "e888d83e21245d349869a2ed96b80e649dcbfd10"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "c691f7bab79bf9db5493f58b42ffdefc28d88090"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.4.0-preview.4.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.4.0-preview.4",
      "dist": {
        "shasum": "2e5c0bbfeba73d3ba6bdc4d2def324e8da6b16b6",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.4.0-preview.4.tgz"
      }
    },
    "2.0.0": {
      "name": "com.unity.remote-config",
      "version": "2.0.0",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.remote-config-runtime": "1.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "1b64718d84a14009bbe92504ce9c64d1420accae"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "f21111250ac3ed93367aa37e3dfc0b9769f44d32"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@2.0.0",
      "dist": {
        "shasum": "8141164996145a4aa15d92204dc52f65a6efabde",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.0.0.tgz"
      }
    },
    "1.4.0": {
      "name": "com.unity.remote-config",
      "version": "1.4.0",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "9c872abf443944538c40967c654b557b2589d68e"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "198ff0e9450238010e53c48701f9c52cae9ee426"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.4.0",
      "dist": {
        "shasum": "73696b002bbbbbb020f7381c4ddeabf42c1575a4",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.4.0.tgz"
      }
    },
    "2.0.0-preview.2": {
      "name": "com.unity.remote-config",
      "version": "2.0.0-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0",
        "com.unity.remote-config-runtime": "1.0.0-exp.3"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "af0e4c79a967a3f960eb823e50f1979892e4aac3"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "016c5bef0c26654cd68d51cb9b101e8b96389ca7"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-2.0.0-preview.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@2.0.0-preview.2",
      "dist": {
        "shasum": "4e067fabdaa9be458b8b6cf048a7ecee5e4e31f3",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-2.0.0-preview.2.tgz"
      }
    },
    "1.4.0-preview.3": {
      "name": "com.unity.remote-config",
      "version": "1.4.0-preview.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "5840c45f8b4792fea3cead396019bad84b92e6e3"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "5a431d30e72e93896cd3f1421215de7681d595bb"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.4.0-preview.3.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.4.0-preview.3",
      "dist": {
        "shasum": "b96a28ef3013ee1a17efa9b116d789652a252927",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.4.0-preview.3.tgz"
      }
    },
    "1.4.0-preview.2": {
      "name": "com.unity.remote-config",
      "version": "1.4.0-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "ec8ae2dee935a1a881aa2316281d3543175f4925"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "df66d6a7fc4ba89a1f939741e27e493aee160e5a"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.4.0-preview.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.4.0-preview.2",
      "dist": {
        "shasum": "b6d1d7777d00e32a11f9f35a7c681198eed70e89",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.4.0-preview.2.tgz"
      }
    },
    "1.4.0-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.4.0-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "9fb685e9e95f1537e203dd04b288ba654b02fc0d"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "162d35fb7bb924b1cf477a4480c6a45b7415404b"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.4.0-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.4.0-preview.1",
      "dist": {
        "shasum": "47e6469858b2dbf9b1e5450146ec5cfe4673a8f4",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.4.0-preview.1.tgz"
      }
    },
    "1.2.4-preview.4": {
      "name": "com.unity.remote-config",
      "version": "1.2.4-preview.4",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "0c78b1927bec83a8ebc92c534e32eb04c491ac82"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "ebc586746fc70ec160d109f923e21df8cc642d23"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.4-preview.4.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.4-preview.4",
      "dist": {
        "shasum": "99bbb79da841764ca93640b985753967bafafcbc",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.4-preview.4.tgz"
      }
    },
    "1.3.2-preview.10": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.10",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "4103fb36bdd259694775fbfa5402be82a431ae4b"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "9f5c2cb54977a019bfe9312e443810b48930e0ad"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.10.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.10",
      "dist": {
        "shasum": "55a3904320f26847b90e6f3cecaa96e33376bf47",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.10.tgz"
      }
    },
    "1.2.4-preview.3": {
      "name": "com.unity.remote-config",
      "version": "1.2.4-preview.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "439a00af576a5541291c5b3577a3f31b6b40217f"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "2f91e01694b4fd4afa15854ac3e7a0eb1f918ecd"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.4-preview.3.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.4-preview.3",
      "dist": {
        "shasum": "169e6857a63582542f475075d7b8aff5550a6cc7",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.4-preview.3.tgz"
      }
    },
    "1.3.2-preview.9": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.9",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.4",
      "upmCi": {
        "footprint": "e7421a73c865063f4c5f05603c0bdf969a935b8c"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "c081c103f0124dd21093081b1aa95791a16c468e"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.9.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.9",
      "dist": {
        "shasum": "930c3a9ba423eca4f64cd9b90bcf33509c21055d",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.9.tgz"
      }
    },
    "1.2.4-preview.2": {
      "name": "com.unity.remote-config",
      "version": "1.2.4-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "d6947f6642f9e99915114e952eef37c738e7bc36"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "cd992dd56f5b03b62770812cece662a06e696753"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.4-preview.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.4-preview.2",
      "dist": {
        "shasum": "7f0cf18bea23c0ff46d7db9ca7d4f9866262b05e",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.4-preview.2.tgz"
      }
    },
    "1.2.3-preview.2": {
      "name": "com.unity.remote-config",
      "version": "1.2.3-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "71c9575c8a0c3d3e8a54020a33ee60e542a11979"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "699c288f1e0c8296030266bb4a7ab69d331e0bea"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.3-preview.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.3-preview.2",
      "dist": {
        "shasum": "a48d83abca74a5831652342c3b2e654b253b97d9",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.3-preview.2.tgz"
      }
    },
    "1.3.2-preview.8": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.8",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "819bb9a2e896210e814f717d0e2d74f33faa7b4e"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "5ff3453b10f8a1100914da559e40a0ea8c67abea"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.8.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.8",
      "dist": {
        "shasum": "20f0a9bd0c90488777dba4ed0e20bfed07c7c7d5",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.8.tgz"
      }
    },
    "1.3.2-preview.7": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.7",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "88ce1325509a66f9bc6dfd90af0efe8252e7440a"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "56ec39c032a81a9bcf42f09cba4f2918b648f30c"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.7.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.7",
      "dist": {
        "shasum": "c45760feccbb1857e3b47bbc4a0f30b5048fce7d",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.7.tgz"
      }
    },
    "1.3.2-preview.6": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.6",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "05bb5120060800e58ee575ed608775f86711f55f"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "9619242253cee96fe376ad006afad2e9dd462208"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.6.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.6",
      "dist": {
        "shasum": "00c87220259c70b57c04620c7a8ee7d5c3310f58",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.6.tgz"
      }
    },
    "1.3.2-preview.5": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.5",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "104eac8374e0ff531980fbebd5f6699585f59107"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "82785496b2cf2be668b4aa3d1220bf15a8d8fbc1"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.5.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.5",
      "dist": {
        "shasum": "8fa56086a7c8c18b0277b2cfd827b51373e434ed",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.5.tgz"
      }
    },
    "1.3.2-preview.4": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.4",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "e3eb85cc11920eb1775ae2a858abfb5a5c7ecc5c"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "cc22b2fde6942e19cda66cfd13f57608cf938185"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.4.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.4",
      "dist": {
        "shasum": "ca4f50727a166cd7b721def5d154c8660acb8e22",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.4.tgz"
      }
    },
    "1.3.2-preview.3": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "ff90dc1c11e4461a5179b6d5838431d6b4eb70b5"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "4f353048e74883712174d67c675d5f8476eecc24"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.3.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.3",
      "dist": {
        "shasum": "cfb7668a4c0c7d459e59ff6e85956d2daeedca4d",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.3.tgz"
      }
    },
    "1.2.3": {
      "name": "com.unity.remote-config",
      "version": "1.2.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "8ec271dfebcb474ee0e283b59d00e82ef64aa254"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "c61e7b311cc8913ff7cefbc527c4fed60c70e590"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.3.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.3",
      "dist": {
        "shasum": "46ac1db9c9b7c3447a0e686a8523f54af3875aba",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.3.tgz"
      }
    },
    "1.2.3-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.2.3-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "8292c38df849c259df377a8d6f9afed4b79d1804"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "5226c0a7a42d751d6d28ca011a532eb10f01f534"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.3-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.3-preview.1",
      "dist": {
        "shasum": "e18bab2039341f6db5d52529bb2a7e18fb4f29c6",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.3-preview.1.tgz"
      }
    },
    "1.3.2-preview.2": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "category": "",
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "3d8971056e607fa69f4562c08baa3f8ffce28fda"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "type": "git",
        "revision": "10faa8b748c37c04766109d6e775c7d5146a7feb"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.2",
      "dist": {
        "shasum": "6a9cf372d3f977a9591323fb51370aa99336c494",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.2.tgz"
      }
    },
    "1.3.2-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.3.2-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "4f35e103b55ff8ed5f05b356dc5ee8bb052cd196"
      },
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "8a2125cbec317ec4de83d6649a39ee4d8a2b7726"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.2-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.2-preview.1",
      "dist": {
        "shasum": "d02609411503e43bf06bcf47fbc067c56bef832e",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.2-preview.1.tgz"
      }
    },
    "1.2.2": {
      "name": "com.unity.remote-config",
      "version": "1.2.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "39bfcbb1df11785aae5070b3d70155c7d0efc70b"
      },
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "3069f057659a64f637dab301d41ba9d8a62fa965"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.2",
      "_shasum": "84dc618103cb150e94b6d0ca7de11085936f1a43",
      "_resolved": "file:../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.remote-config-1.2.2.tgz",
      "_from": "../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.remote-config-1.2.2.tgz",
      "scripts": {},
      "dist": {
        "shasum": "84dc618103cb150e94b6d0ca7de11085936f1a43",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.2.tgz"
      }
    },
    "1.3.1-preview.4": {
      "name": "com.unity.remote-config",
      "version": "1.3.1-preview.4",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "733d174634aa9b0ba584f6b5b816170c757a5349"
      },
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "100654fa21b2a52855483141c444a5d014da26fa"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.1-preview.4.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.1-preview.4",
      "dist": {
        "shasum": "fa409a82325f46bafe1a4347fcc78da969c37341",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.1-preview.4.tgz"
      }
    },
    "1.2.2-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.2.2-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "4fba2977bca17c7d1e16cea217cafc7d2307cec4"
      },
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "54736f9f8f8ef6572aa07f3281418ed56b91d79e"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.2-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.2-preview.1",
      "dist": {
        "shasum": "e1da8a05e772f1196461af15f39f29d9f3d9f69f",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.2-preview.1.tgz"
      }
    },
    "1.2.1": {
      "name": "com.unity.remote-config",
      "version": "1.2.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "9e901c543ea5bdd26c94d1f328ecb9b6ae2e0199"
      },
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "34acc143ca19e95420fd2a4c3fe5942803c801d8"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.1",
      "_shasum": "3ab18a6149b973ef592219a2488fc4d2b39089ef",
      "_resolved": "file:../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.remote-config-1.2.1.tgz",
      "_from": "../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.remote-config-1.2.1.tgz",
      "scripts": {},
      "dist": {
        "shasum": "3ab18a6149b973ef592219a2488fc4d2b39089ef",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.1.tgz"
      }
    },
    "1.3.1-preview.3": {
      "name": "com.unity.remote-config",
      "version": "1.3.1-preview.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "ec50d91f4a5cbca07fcd13ca6798bb1199d07cf9"
      },
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "bdc0f9d908b63e03f19e99248be66abb8e5343f2"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.1-preview.3.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.1-preview.3",
      "dist": {
        "shasum": "1df126d51f3bc5d8566d84d7103f34035920ccc4",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.1-preview.3.tgz"
      }
    },
    "1.3.1-preview.2": {
      "name": "com.unity.remote-config",
      "version": "1.3.1-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "0dbaf6ec7471a6f852e716ac3f04efa7b3c13b5f"
      },
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "cc547a6e56e1c8c194228496fb72c9669b2ffe7e"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.1-preview.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.1-preview.2",
      "dist": {
        "shasum": "41ce716f7c71d176f31b25ce085954d3786c2d48",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.1-preview.2.tgz"
      }
    },
    "1.2.1-preview": {
      "name": "com.unity.remote-config",
      "version": "1.2.1-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "5b011b7ac2044c45492dd75c91ba7417fac4dd0b"
      },
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "e34aa4444056e2985262fda107d61152fa43cce9"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.1-preview.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.1-preview",
      "dist": {
        "shasum": "89961dcd3caf3842c28a59e0044a2a93f157684a",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.1-preview.tgz"
      }
    },
    "1.3.1-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.3.1-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "upmCi": {
        "footprint": "65af3bb7533895e1a02982fef7273e40e973b469"
      },
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "0015b91979c16482c112918130cdbc2c2b12c23d"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.1-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.1-preview.1",
      "dist": {
        "shasum": "8cbd34e7b48ff589986fbadef8a77159dc112ce6",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.1-preview.1.tgz"
      }
    },
    "1.3.0-preview.2": {
      "name": "com.unity.remote-config",
      "version": "1.3.0-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "footprint": "0121a94473342c600e85189b7ca0918818c9eb43",
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "5e83a57f4f8a809de3a23524656def8a83707efb"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.0-preview.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.0-preview.2",
      "dist": {
        "shasum": "b52ffcb321137564b63b5fef43f74a3840994624",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.0-preview.2.tgz"
      }
    },
    "1.2.0-preview.5": {
      "name": "com.unity.remote-config",
      "version": "1.2.0-preview.5",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "footprint": "675780ef98fcebd6a52eea6a846806b1aae394c4",
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "9a9787ef144a25a4d599fd4010228adde53e3dca"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.0-preview.5.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.0-preview.5",
      "dist": {
        "shasum": "b87191ddcf3d07eab02b4866352bcf72b4fb0c26",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.0-preview.5.tgz"
      }
    },
    "1.0.10-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.0.10-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "unity": "2018.3",
      "repository": {
        "footprint": "8eb03edda3012821dc86e4163c24e4d118f82de7",
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "7a44877c5d379ec3ef79ce58b17273534c4e7467"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.0.10-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.0.10-preview.1",
      "dist": {
        "shasum": "a75b341a389ff83ce314de6bbc09eed23b8a244b",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.10-preview.1.tgz"
      }
    },
    "1.3.0-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.3.0-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "footprint": "eb65fc16732084c2803f51ec7c13e891330596bb",
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "41bf2df120d514960efdbb02ff547ac4c2604c51"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.3.0-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.3.0-preview.1",
      "dist": {
        "shasum": "6c979b55e51938cb9e7c87bf5b1e7f872d2f0f57",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.3.0-preview.1.tgz"
      }
    },
    "1.2.0-preview.4": {
      "name": "com.unity.remote-config",
      "version": "1.2.0-preview.4",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "footprint": "9c078f819fd86c67915f20ccdaedfd16b3f7a963",
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "4b7ef59c06f32e7ff146b57d78f84a62bfc5c706"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.0-preview.4.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.0-preview.4",
      "dist": {
        "shasum": "77bd5f3fc1ce0d63c97389a2c6166d0c1750dfc7",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.0-preview.4.tgz"
      }
    },
    "1.2.0-preview.3": {
      "name": "com.unity.remote-config",
      "version": "1.2.0-preview.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "footprint": "93b923ae5e32b1f24bb7359cafcf125458066f2c",
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "0fbecf5df1a6aa6763741869012574d6043530fc"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.0-preview.3.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.0-preview.3",
      "dist": {
        "shasum": "074604158a5cafabd37ad3dfd09f109365c78d84",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.0-preview.3.tgz"
      }
    },
    "1.0.9": {
      "name": "com.unity.remote-config",
      "version": "1.0.9",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "footprint": "97c24b22908d1b5c520151dbd1ec2c48fc609e1a",
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "ec4c3e29628cb265dbf8f73d5b50970f3150f285"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.9.tgz",
        "shasum": "42e0f6d3b44a0e61e3e93916993f4b60bdcdede2"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.9",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.2.0-preview.2": {
      "name": "com.unity.remote-config",
      "version": "1.2.0-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "footprint": "e9280df32255ddfd57a24e6a46eb0783a3c7c854",
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "98a2551bc1595cf1f51c172901a54d60f9e76028"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.0-preview.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.0-preview.2",
      "dist": {
        "shasum": "a961994e7d1caddfda74dd7ffde4f9549effc93f",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.0-preview.2.tgz"
      }
    },
    "1.2.0-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.2.0-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "85d4205b2cc2282e497bc6f67eab3b82243c01be"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.0-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.0-preview.1",
      "dist": {
        "shasum": "c0de5febca619870094da181889ac789c5dd8493",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.0-preview.1.tgz"
      }
    },
    "1.2.0-preview": {
      "name": "com.unity.remote-config",
      "version": "1.2.0-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "type": "git",
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.ai.remote-settings.git",
        "revision": "de9f8973cdd2928ad95ca5de220d1d45bcd604ad"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.2.0-preview.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.2.0-preview",
      "dist": {
        "shasum": "ad70d4d95d7df916c9c4afaf4b09ecda95c0e4a1",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.2.0-preview.tgz"
      }
    },
    "1.1.0-preview.4": {
      "name": "com.unity.remote-config",
      "version": "1.1.0-preview.4",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "e6908d8524cac1faeed3bb6e7ef52c68e93ef6f4"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.1.0-preview.4.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.1.0-preview.4",
      "dist": {
        "shasum": "3adc9c15dbfa615b92dd85a6d44c9cadc0d2b89d",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.1.0-preview.4.tgz"
      }
    },
    "1.1.0-preview.3": {
      "name": "com.unity.remote-config",
      "version": "1.1.0-preview.3",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "eac6539a80920c29aa024d12e4b2dbc303431082"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.1.0-preview.3.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.1.0-preview.3",
      "dist": {
        "shasum": "7b86d27941ddb0c4024b50ae62f663f9eccfa99e",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.1.0-preview.3.tgz"
      }
    },
    "1.0.9-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.0.9-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "unity": "2018.3",
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "8d746b217554f1518d04f80012a6dba0c73d7fd7"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.0.9-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.0.9-preview.1",
      "dist": {
        "shasum": "24ec9d65f6bfb1c72380166136b2c314415ddd72",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.9-preview.1.tgz"
      }
    },
    "1.1.0-preview.2": {
      "name": "com.unity.remote-config",
      "version": "1.1.0-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "8eaf7011b4e25854f1b389045b949c695355b47a"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.1.0-preview.2.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.1.0-preview.2",
      "dist": {
        "shasum": "10dcf605d81e85ec5c4dea07bf4d464143bc62d2",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.1.0-preview.2.tgz"
      }
    },
    "1.1.0-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.1.0-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "ed4df76033b0934145cd2c6738af796ec7be2dcb"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.1.0-preview.1.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.1.0-preview.1",
      "dist": {
        "shasum": "08b9e49c745c4ad1b0a3ac72417617f5a9889982",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.1.0-preview.1.tgz"
      }
    },
    "1.1.0-preview": {
      "name": "com.unity.remote-config",
      "version": "1.1.0-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {
        "com.unity.nuget.newtonsoft-json": "2.0.0-preview"
      },
      "unity": "2018.3",
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "dab67039e065f209d5835b497bde1c2400c35810"
      },
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.remote-config-1.1.0-preview.tgz",
      "readmeFilename": "README.md",
      "_id": "com.unity.remote-config@1.1.0-preview",
      "dist": {
        "shasum": "4b346f4322773ae7e9aa861550c810b495ec748b",
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.1.0-preview.tgz"
      }
    },
    "1.0.9-preview": {
      "name": "com.unity.remote-config",
      "version": "1.0.9-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "bb1cbf84b6902622e1781e0de406ba344240b835"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.9-preview.tgz",
        "shasum": "d77ef7bd09cae3609e9bfe065f3d012a32aaed07"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.9-preview",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.0.8": {
      "name": "com.unity.remote-config",
      "version": "1.0.8",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "1c7e4e5c76e73d7b7fc2506a611ca16926db5230"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.8.tgz",
        "shasum": "a1ab72b9aee19655c01ecfa28d22d087b56e1eeb"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.8",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.0.8-preview.1": {
      "name": "com.unity.remote-config",
      "version": "1.0.8-preview.1",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "a9c4ee7f7a8113d74ebb750213735891bbca2e7c"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.8-preview.1.tgz",
        "shasum": "dbb84183125bf92e4bf83b9d77896bc0b7ff5c5b"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.8-preview.1",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.0.8-preview": {
      "name": "com.unity.remote-config",
      "version": "1.0.8-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "8bfafbe99c637f417e2b39381b1fa4a37100d14a"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.8-preview.tgz",
        "shasum": "a4281964f5fd999701700f44f0506e47157bbdfa"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.8-preview",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.0.7-preview": {
      "name": "com.unity.remote-config",
      "version": "1.0.7-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "518bea44653cce2fe98e84350513207bd765498a"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.7-preview.tgz",
        "shasum": "56ab691fcbf50b1b6b782fe56745ec8ea86710ed"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.7-preview",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.0.6": {
      "name": "com.unity.remote-config",
      "version": "1.0.6",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "b7a133562cc1025f764a1576645889a1119af7f0"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.6.tgz",
        "shasum": "3b61b2148856a8504caa5824881ca20fd64185b6"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.6",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.0.6-preview": {
      "name": "com.unity.remote-config",
      "version": "1.0.6-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "427328f691656761927174dd1bf107103c118e5d"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.6-preview.tgz",
        "shasum": "72f4f46cef25ae17156824f9c7dd560b7593ecbf"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.6-preview",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Sample contains an empty scene from which the example code in the Documentation can be implemented with",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.0.5-preview": {
      "name": "com.unity.remote-config",
      "version": "1.0.5-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "aa65fc21b5ddfc8e697fde9b4c57c624695967bc"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.5-preview.tgz",
        "shasum": "dcbeb3214cff7abac1efc9cf30f76d696fddb1a5"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.5-preview",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Replace this string with your own description of the sample. Delete the Samples folder if not needed.",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.0.4-preview.2": {
      "name": "com.unity.remote-config",
      "version": "1.0.4-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings",
        "remote settings",
        "remote config",
        "firebase",
        "staged rollouts",
        "feature flagging",
        "roll-out",
        "adapt",
        "tune",
        "tailor",
        "test",
        "experiment",
        "experimentation",
        "app update",
        "taget",
        "targeting",
        "segment",
        "segmentation",
        "segmenting",
        "override",
        "rules",
        "variants",
        "variation",
        "parameter",
        "condtions",
        "conditional",
        "continuous delivery",
        "deploy"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "c2c101c560501f533460fe08b08a2f83c6a18d52"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.4-preview.2.tgz",
        "shasum": "5ab3b817ddb15b967bb775aba2ea261ca0feddc1"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.4-preview.2",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Replace this string with your own description of the sample. Delete the Samples folder if not needed.",
          "path": "Samples~/Example"
        }
      ]
    },
    "1.0.0-preview": {
      "name": "com.unity.remote-config",
      "version": "1.0.0-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "763dc7e72a26b443e85c4d3e697eee78552d3f65"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-1.0.0-preview.tgz",
        "shasum": "221becc30768012e83ea279f0266e9c771ecde1e"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@1.0.0-preview",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Replace this string with your own description of the sample. Delete the Samples folder if not needed.",
          "path": "Samples~/Example"
        }
      ]
    },
    "0.3.2-preview": {
      "name": "com.unity.remote-config",
      "version": "0.3.2-preview",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "241033bedc8a6a85fee077ab8ec92851e48d5d45"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-0.3.2-preview.tgz",
        "shasum": "2434d106b3aca422958b0d64bfff53990abaf2c6"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@0.3.2-preview",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Replace this string with your own description of the sample. Delete the Samples folder if not needed.",
          "path": "Samples~/Example"
        }
      ]
    },
    "0.3.1-preview.2": {
      "name": "com.unity.remote-config",
      "version": "0.3.1-preview.2",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "e49a6576c00fac77ebbd72092574d4d3994704ef"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-0.3.1-preview.2.tgz",
        "shasum": "bbbe76422bb872a2976df2f35948ea9cc5544fb7"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@0.3.1-preview.2",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Replace this string with your own description of the sample. Delete the Samples folder if not needed.",
          "path": "Samples~/Example"
        }
      ]
    },
    "0.3.0-preview.4": {
      "name": "com.unity.remote-config",
      "version": "0.3.0-preview.4",
      "displayName": "Remote Config",
      "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Rules control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public APIs.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
      "keywords": [
        "remote",
        "config",
        "configuration",
        "settings"
      ],
      "dependencies": {},
      "repository": {
        "type": "git",
        "url": "git@github.cds.internal.unity3d.com:unity/com.unity.ai.remote-settings.git",
        "revision": "c7e9b41fa590382ccc73a9e3618df73bdfa2d609"
      },
      "dist": {
        "tarball": "https://download-packages.unity.cn/com.unity.remote-config/-/com.unity.remote-config-0.3.0-preview.4.tgz",
        "shasum": "71620b023ae2d108b70cea9ec02768ad20a9c465"
      },
      "scripts": {},
      "_id": "com.unity.remote-config@0.3.0-preview.4",
      "unity": "2018.3",
      "samples": [
        {
          "displayName": "Example Sample",
          "description": "Replace this string with your own description of the sample. Delete the Samples folder if not needed.",
          "path": "Samples~/Example"
        }
      ]
    }
  },
  "etag": "\"558a3d37425b9bdba56e64594d685c91\"",
  "provider": "upm",
  "name": "com.unity.remote-config",
  "description": "Remote Config is a cloud service that lets you tune and customize your app over the air without requiring an update to your game.  You can use rules to enable or disable features, change the difficulty of your game or run special events to target specific audiences.  Campaigns control when updates are applied and to whom, while Unity manages delivery of your game content with minimal performance impact. \n\nRemote Config can be configured via the editor or through our public API’s.  Functionality includes: \n- Release new features without deploying code:\n   - Feature flagging\n   - Staged Rollouts\n   - Kill switch functionality\n   - Start & End Date\n   - Enable & disable rules\n- Personalized real-time segmentation with custom attributes\n   - Custom conditions for applying setting variants\n   - Device, user, game and other arbitrary attributes supporting\n- Reporting\n   - Tracing ID for decorating analytics events",
  "_id": "com.unity.remote-config",
  "cnTags": [],
  "time": {
    "4.2.2": "2025-09-26T03:16:31Z",
    "4.2.1": "2025-09-09T03:16:31Z",
    "4.1.1": "2024-06-17T09:31:09Z",
    "4.1.0": "2024-05-03T11:10:11Z",
    "4.0.0": "2023-11-03T12:04:21Z",
    "3.3.2": "2023-05-12T08:52:29Z",
    "2.1.3-exp.11": "2023-03-10T18:42:36Z",
    "2.1.3-exp.10": "2023-01-11T18:16:52Z",
    "1.4.0-preview.8": "2023-01-10T18:14:51Z",
    "3.3.1": "2022-12-12T10:26:52Z",
    "3.2.2": "2022-10-13T19:18:54Z",
    "2.1.3-exp.9": "2022-09-02T03:15:52Z",
    "2.1.3-exp.8": "2022-07-01T06:23:53Z",
    "3.1.3": "2022-06-22T17:35:54Z",
    "2.1.3-exp.7": "2022-06-18T23:56:59Z",
    "2.1.3-exp.6": "2022-06-09T17:17:05Z",
    "3.1.0": "2022-05-30T20:21:12Z",
    "3.0.0": "2022-05-20T15:42:22Z",
    "3.0.0-pre.15": "2022-04-08T17:05:44Z",
    "3.0.0-pre.14": "2022-03-28T04:48:33Z",
    "2.1.3-exp.4": "2022-03-18T00:14:14Z",
    "3.0.0-pre.13": "2022-03-17T22:13:59Z",
    "2.1.3-exp.3": "2022-03-09T21:36:04Z",
    "3.0.0-pre.12": "2022-03-09T16:23:20Z",
    "2.1.3-exp.2": "2022-02-23T21:49:25Z",
    "3.0.0-pre.11": "2022-02-17T04:04:32Z",
    "3.0.0-pre.10": "2022-02-11T07:40:25Z",
    "3.0.0-pre.9": "2022-01-14T05:25:44Z",
    "3.0.0-pre.8": "2021-12-07T17:04:30Z",
    "3.0.0-pre.7": "2021-11-25T17:34:03Z",
    "3.0.0-pre.6": "2021-11-24T03:25:30Z",
    "2.1.3-exp.1": "2021-11-19T17:12:41Z",
    "3.0.0-pre.5": "2021-11-03T23:28:50Z",
    "2.1.2": "2021-10-07T14:53:22Z",
    "2.1.1": "2021-10-04T12:55:41Z",
    "1.4.0-preview.7": "2021-09-28T22:06:39Z",
    "3.0.0-pre.4": "2021-09-22T21:00:43Z",
    "2.1.1-exp.2": "2021-09-15T20:47:36Z",
    "3.0.0-pre.3": "2021-09-07T13:26:23Z",
    "2.1.1-exp.1": "2021-06-29T02:16:45Z",
    "1.4.0-preview.6": "2021-05-18T08:04:26Z",
    "2.1.0-exp.2": "2021-05-18T06:08:01Z",
    "2.1.0-exp.1": "2021-04-23T19:18:04Z",
    "2.0.2-exp.1": "2021-02-10T15:51:51Z",
    "1.4.0-preview.5": "2021-02-03T22:07:14Z",
    "2.0.1": "2020-12-12T20:00:57Z",
    "1.4.0-preview.4": "2020-12-09T15:57:56Z",
    "2.0.0": "2020-11-02T15:22:14Z",
    "1.4.0": "2020-10-26T19:00:21Z",
    "2.0.0-preview.2": "2020-10-22T07:27:36Z",
    "1.4.0-preview.3": "2020-10-22T01:50:34Z",
    "1.4.0-preview.2": "2020-10-03T21:00:14Z",
    "1.4.0-preview.1": "2020-08-29T02:06:28Z",
    "1.2.4-preview.4": "2020-08-25T21:57:55Z",
    "1.3.2-preview.10": "2020-08-25T21:53:53Z",
    "1.2.4-preview.3": "2020-08-18T07:56:15Z",
    "1.3.2-preview.9": "2020-08-18T06:13:32Z",
    "1.2.4-preview.2": "2020-07-31T23:44:06Z",
    "1.2.3-preview.2": "2020-07-31T00:25:10Z",
    "1.3.2-preview.8": "2020-07-31T00:13:05Z",
    "1.3.2-preview.7": "2020-07-24T23:00:32Z",
    "1.3.2-preview.6": "2020-07-15T03:02:55Z",
    "1.3.2-preview.5": "2020-07-10T05:07:45Z",
    "1.3.2-preview.4": "2020-07-03T05:57:23Z",
    "1.3.2-preview.3": "2020-06-18T23:39:31Z",
    "1.2.3": "2020-05-29T18:53:01Z",
    "1.2.3-preview.1": "2020-05-29T01:49:12Z",
    "1.3.2-preview.2": "2020-05-29T01:48:24Z",
    "1.3.2-preview.1": "2020-05-21T01:31:39Z",
    "1.2.2": "2020-05-15T13:45:25Z",
    "1.3.1-preview.4": "2020-05-15T06:10:16Z",
    "1.2.2-preview.1": "2020-05-14T05:17:31Z",
    "1.2.1": "2020-05-11T15:22:23Z",
    "1.3.1-preview.3": "2020-05-07T00:58:39Z",
    "1.3.1-preview.2": "2020-05-01T02:25:33Z",
    "1.2.1-preview": "2020-04-30T06:24:51Z",
    "1.3.1-preview.1": "2020-04-25T07:26:37Z",
    "1.3.0-preview.2": "2020-04-09T22:18:32Z",
    "1.2.0-preview.5": "2020-04-02T04:12:08Z",
    "1.0.10-preview.1": "2020-04-01T03:34:10Z",
    "1.3.0-preview.1": "2020-03-27T05:17:51Z",
    "1.2.0-preview.4": "2020-03-12T04:13:22Z",
    "1.2.0-preview.3": "2020-03-02T20:39:36Z",
    "1.0.9": "2020-02-14T22:04:11Z",
    "1.2.0-preview.2": "2020-02-14T17:12:23Z",
    "1.2.0-preview.1": "2020-02-03T23:00:32Z",
    "1.2.0-preview": "2020-01-31T18:46:52Z",
    "1.1.0-preview.4": "2020-01-10T02:16:02Z",
    "1.1.0-preview.3": "2020-01-09T21:02:51Z",
    "1.0.9-preview.1": "2020-01-07T23:29:57Z",
    "1.1.0-preview.2": "2019-12-28T02:51:51Z",
    "1.1.0-preview.1": "2019-12-19T10:50:11Z",
    "1.1.0-preview": "2019-12-13T21:36:24Z",
    "1.0.9-preview": "2019-11-30T07:04:47Z",
    "1.0.8": "2019-11-20T16:05:28Z",
    "1.0.8-preview.1": "2019-11-09T04:04:12Z",
    "1.0.8-preview": "2019-10-29T00:03:53Z",
    "1.0.7-preview": "2019-10-11T23:03:24Z",
    "1.0.6": "2019-09-19T15:03:24Z",
    "1.0.6-preview": "2019-09-19T08:03:50Z",
    "1.0.5-preview": "2019-09-15T06:02:58Z",
    "1.0.4-preview.2": "2019-09-10T21:03:24Z",
    "1.0.0-preview": "2019-08-11T02:03:00Z",
    "0.3.2-preview": "2019-08-08T00:03:03Z",
    "0.3.1-preview.2": "2019-07-26T01:03:01Z",
    "0.3.0-preview.4": "2019-07-10T02:53:09Z"
  }
}
