{
  "dist-tags": {
    "latest": "1.6.2"
  },
  "versions": {
    "1.6.2": {
      "name": "com.unity.xr.hands",
      "version": "1.6.2",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.inputsystem": "1.3.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.6/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "0845fdeb6e37bfc5fb4bef6592e4d4194b37d393",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.6.2.tgz"
      },
      "samples": [
        {
          "path": "Samples~/Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "displayName": "Gestures"
        },
        {
          "path": "Samples~/HandVisualizer",
          "description": "Basic sample showing how to visualize hands.",
          "displayName": "HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Fixed\n\n- Fixed the Hand Tracking feature so that if you deinitialize the OpenXR Loader and re-initialize it while your app is running, `XRHandProviderUtility` no longer throws a `NullReferenceException`.\n- Fixed missing Tracking State reference in the HandVisualizer and Input Action configuration in HandGestures sample scenes.\n- Fixed an issue with the build tooling where the native libraries were not getting correctly compiled with support for [16 KB page sizes](https://developer.android.com/guide/practices/page-sizes).\n- Updated Android XR hand meshes and hand rigs in order to address visual feedback."
      }
    },
    "1.7.0-pre.1": {
      "name": "com.unity.xr.hands",
      "version": "1.7.0-pre.1",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.inputsystem": "1.3.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.7/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "e4ac469c1f7e3628d971c4c609fca28aa2a40d36",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.7.0-pre.1.tgz"
      },
      "samples": [
        {
          "path": "Samples~/Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "displayName": "Gestures"
        },
        {
          "path": "Samples~/HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "displayName": "HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Fixed\n\n- Deprecated `XRHandSkeletonDriver.m_HasRootTransform` in favor of `XRHandSkeletonDriver.hasRootTransform`."
      }
    },
    "1.7.0-pre.2": {
      "name": "com.unity.xr.hands",
      "version": "1.7.0-pre.2",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.inputsystem": "1.3.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.7/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "9749b345e42d39ef52ff8a3c0c1165995a05b7c1",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.7.0-pre.2.tgz"
      },
      "samples": [
        {
          "path": "Samples~/Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "displayName": "Gestures"
        },
        {
          "path": "Samples~/HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "displayName": "HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Fixed\n\n- Deprecated `XRHandSkeletonDriver.m_HasRootTransform` in favor of `XRHandSkeletonDriver.hasRootTransform`."
      }
    },
    "1.6.1": {
      "name": "com.unity.xr.hands",
      "version": "1.6.1",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.inputsystem": "1.3.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.6/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "ff73e7abcedb00c91c9323d447e83f233d142178",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.6.1.tgz"
      },
      "samples": [
        {
          "path": "Samples~/Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "displayName": "Gestures"
        },
        {
          "path": "Samples~/HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "displayName": "HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Fixed\n\n- Fixed some deformations in the authored hand mesh provided for Android XR development that is a part of the Hand Visualizer sample. Note: A firmware update on the Android XR devices may be required for the meshes to appear correctly since they depend on an updated hand tracking data model."
      }
    },
    "1.6.0": {
      "name": "com.unity.xr.hands",
      "version": "1.6.0",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.inputsystem": "1.3.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.6/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "9174aa07765b5dfdb1e7ae29d4348e8df2d79678",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.6.0.tgz"
      },
      "samples": [
        {
          "path": "Samples~/Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "displayName": "Gestures"
        },
        {
          "path": "Samples~/HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "displayName": "HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Added\n\n- Added new custom editor inspector for hand shapes.\n- Added `XRHandSubsystem.TryGetMeshData` to attempt retrieval of runtime-supplied hand mesh data, if it's supported on that platform and enabled.\n- Added ability to switch between hand meshes depending on the underlying runtime and vendor. The initial support provides a mesh for OpenXR conformant devices such as Android XR and a mesh to support Meta Quest devices by way of OpenXR.\n- Added project validation rules to the Gestures sample to check if the HandVisualizer sample is missing and needs to be imported, and to verify whether the package version needs to be updated.\n- Added `XRHandProviderUtility.CreateHand` for manually creating and initializing an `XRHand` instance. This is intended for advanced scenarios where `XRHand` is used independently of the `XRHandSubsystem`.\n- Added `XRHandProviderUtility.DisposeHand` to release allocated resources for `XRHand` instances created manually via `XRHandProviderUtility.CreateHand`. This should not be used for `XRHand` managed by the `XRHandSubsystem`.\n- Added `CalculateFingerShapeUncached`, which always calculates the requested `XRFingerShape` values without any attempt to save on performance by using previously requested results.\n\n### Fixed\n\n- Fixed the help documentation links in the OpenXR Project Settings where hands features were exposed in the Feature Groups editor window.\n- Recompiled the native plug-in with support for [16 KB page sizes](https://developer.android.com/guide/practices/page-sizes) on Android 15 or newer.\n- Fixed meta file collision with PolySpatial.\n- Fixed URP material importing by adding a `MaterialPipelineHandler` script along with the corresponding asset to detect and reassign material shaders for the HandVisualizer Sample. [XRHB-78](https://issuetracker.unity3d.com/product/unity/issues/guid/XRHB-78)\n- Fixed hand model references for the Hand Visualizer in the HandGesture scene of the Gestures sample."
      }
    },
    "1.6.0-pre.3": {
      "name": "com.unity.xr.hands",
      "version": "1.6.0-pre.3",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.inputsystem": "1.3.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.6/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "3661aac5e9252e1714b656a73c9d3eedafccc09a",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.6.0-pre.3.tgz"
      },
      "samples": [
        {
          "path": "Samples~/Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "displayName": "Gestures"
        },
        {
          "path": "Samples~/HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "displayName": "HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Added\n\n- Added project validation rules to the Gestures sample to check if the HandVisualizer sample is missing and needs to be imported, and to verify whether the package version needs to be updated.\n\n### Fixed\n- Fixed meta file collision with Polyspatial."
      }
    },
    "1.5.1": {
      "name": "com.unity.xr.hands",
      "version": "1.5.1",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.inputsystem": "1.3.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.5/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "860f3562c229c2228869eacf1aacac0f8863bc80",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.5.1.tgz"
      },
      "samples": [
        {
          "path": "Samples~/Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "displayName": "Gestures"
        },
        {
          "path": "Samples~/HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "displayName": "HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Added\n\n- Added support for Android XR as a part of the `HandVisualizer` sample. This update includes an OpenXR runtime check to determine the hand meshes to use for visualization.\n- Added Android XR variants of the sample hand meshes provided in the `HandVisualizer` sample package.\n\n### Fixed\n\n- Fixed the help documentation links in the OpenXR Project Settings where hands features were exposed in the Feature Groups editor window.\n- Recompiled the native plug-in with support for [16 KB page sizes](https://developer.android.com/guide/practices/page-sizes) on Android 15 or newer."
      }
    },
    "1.6.0-pre.2": {
      "name": "com.unity.xr.hands",
      "version": "1.6.0-pre.2",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.inputsystem": "1.3.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.6/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "9ef6fb0fe71c07aae5b54bca297ee7d42297ca2f",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.6.0-pre.2.tgz"
      },
      "samples": [
        {
          "path": "Samples~/Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "displayName": "Gestures"
        },
        {
          "path": "Samples~/HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "displayName": "HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Added\n\n- Added ability to switch between hand meshes depending on the underlying runtime and vendor. The initial support provides a mesh for OpenXR conformant devices such as Android XR and a mesh to support Meta Quest devices by way of OpenXR."
      }
    },
    "1.6.0-pre.1": {
      "name": "com.unity.xr.hands",
      "version": "1.6.0-pre.1",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.inputsystem": "1.3.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.6/manual/index.html",
      "unity": "2021.3",
      "dist": {
        "shasum": "a9d8856c712250e4c7d85c64d0f322241109b709",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.6.0-pre.1.tgz"
      },
      "samples": [
        {
          "path": "Samples~/Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "displayName": "Gestures"
        },
        {
          "path": "Samples~/HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "displayName": "HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Added\n\n- Added new custom editor inspector for hand shapes.\n- Added `XRHandSubsystem.TryGetMeshData` to attempt retrieval of runtime-supplied hand mesh data, if it's supported on that platform and enabled.\n\n### Fixed\n\n- Fixed the help documentation links in the OpenXR Project Settings where hands features were exposed in the Feature Groups editor window.\n- Recompiled the native plug-in with support for [16 KB page sizes](https://developer.android.com/guide/practices/page-sizes) on Android 15 or newer."
      }
    },
    "1.5.0": {
      "name": "com.unity.xr.hands",
      "version": "1.5.0",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1",
        "com.unity.mathematics": "1.2.6"
      },
      "unity": "2021.3",
      "_upm": {
        "changelog": "### Added\n\n- Added `XRCommonHandGestures` and surfaced related data from the OpenXR Hand Interaction Profile extension.\n- Added public `subsystem` property to `XRHandTrackingEvents` to let users get the `XRHandSubsystem` that is the source of the hand tracking data. Also added public `subsystem` property to `XRHandJointsUpdatedEventArgs` so it is available in the `XRHandTrackingEvents.jointsUpdated` event callback.\n- Added support for a new `XRHandJointTrackingState.HighFidelityPose` flag to the XR Hands Subsystem.\n    - Added support for the HighFidelityPose tracking flag to the OpenXRHandProvider.\n    - Updated hand visualization sample to color debug joint cubes based on tracking fidelity: opaque white for joints which have a pose and are high fidelity; translucent red for joints which have a pose and are not high fidelity.\n- Added OpenXR callbacks `HandTracking.subsystemCreated` and `HandTracking.destroyingSubsystem` for lifecycle response.\n- Added OpenXR APIs `HandTracking.automaticallyInitializeSubsystem` and `HandTracking.EnsureSubsystemInitialized` to allow for delayed initialization of the `XRHandSubsystem`. To disable automatic creation in time, set `HandTracking.automaticallyInitializeSubsystem` to `false` in a `static` method decorated with `[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]`, then call `HandTracking.EnsureSubsystemInitialized` when ready.\n\n### Changed\n\n- Allows for ignoring tip-most knuckle when calculating full curl when the `XRFingerShapeConfiguration`'s `minimumFullCurlDegrees3` or `maximumFullCurlDegrees3` is non-positive.\n\n### Fixed\n\n- Fixed reference direction when using `XRHandUserRelativeDirection.NoseDirection` for gesture detection.\n- Fixed runtime invalidation, which resulted in crashes on some OpenXR runtimes. Runtime is invalidated when the `XrInstance` is destroyed.\n- Fixed threshold-checking on gesture conditions to allow for the full range in `XRFingerShapeCondition`.\n- `XRCommonHandGestures` data retrieval no longer GC.Allocs.\n- Updated app space change behavior for XR provider to no longer destroy hand trackers only to recreate them the next update.\n- Fixed issue where XrHands would try to update hand joints with an uninitialized XrTime value of XR_INFINITE_DURATION.\n- Fixed an issue with packaging that prevented MacOS compatible libraries from being included as part of the package."
      },
      "upmCi": {
        "footprint": "755b8b1fcccdc38baf4cc31f81a83797e9f5a1f5"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.5/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "4885d8ead84d87a2b2a38945923fbbc7b1ef8131"
      },
      "samples": [
        {
          "displayName": "Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "path": "Samples~/Gestures"
        },
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "dist": {
        "shasum": "b137b9cef9d8ac6f2f21023d4def8cc316ae4dbc",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.5.0.tgz"
      }
    },
    "1.5.0-pre.4": {
      "name": "com.unity.xr.hands",
      "version": "1.5.0-pre.4",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1",
        "com.unity.mathematics": "1.2.6"
      },
      "unity": "2021.3",
      "_upm": {
        "changelog": "### Added\n\n- Added support for a new `XRHandJointTrackingState.HighFidelityPose` flag to the XR Hands Subsystem.\n    - Added support for the HighFidelityPose tracking flag to the OpenXRHandProvider.\n    - Updated hand visualization sample to color debug joint cubes based on tracking fidelity: opaque white for joints which have a pose and are high fidelity; translucent red for joints which have a pose and are not high fidelity.\n\n### Fixed\n\n- Fixed runtime invalidation, which resulted in crashes on some OpenXR runtimes. Runtime is invalidated when the `XrInstance` is destroyed.\n- Fixed threshold-checking on gesture conditions to allow for the full range in `XRFingerShapeCondition`.\n- `XRCommonHandGestures` data retrieval no longer GC.Allocs.\n- Updated app space change behavior for XR provider to no longer destroy hand trackers only to recreate them the next update.\n- Fixed issue where XrHands would try to update hand joints with an uninitialized XrTime value of XR_INFINITE_DURATION."
      },
      "upmCi": {
        "footprint": "b7df8d512e62c5f09e163b786c2b72ae932c6461"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.5/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "84872d01463fbf1aed145ce41d0e8f63f76efba4"
      },
      "samples": [
        {
          "displayName": "Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "path": "Samples~/Gestures"
        },
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "dist": {
        "shasum": "d64599b823038e5fd8ad1e4e63fe5e4f68f4cbf6",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.5.0-pre.4.tgz"
      }
    },
    "1.4.3": {
      "name": "com.unity.xr.hands",
      "version": "1.4.3",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1",
        "com.unity.mathematics": "1.2.6"
      },
      "unity": "2021.3",
      "_upm": {
        "changelog": "### Changed\n\n- Allows for ignoring tip-most knucle when calculating full curl when the `XRFingerShapeConfiguration`'s `minimumFullCurlDegrees3` or `maximumFullCurlDegrees3` is non-positive.\n\n### Fixed\n\n- Fixed reference direction when using `XRHandUserRelativeDirection.NoseDirection` for gesture detection.\n- Fixed runtime invalidation, which resulted in crashes on some OpenXR runtimes. Runtime is invalidated when the `XrInstance` is destroyed.\n- Fixed issue where XrHands would try to update hand joints with an uninitialized XrTime value of XR_INFINITE_DURATION.\n- Updated app space change behavior for XR provider to no longer destroy hand trackers only to recreate them the next update."
      },
      "upmCi": {
        "footprint": "8579a993d40f48ab6c7216f50d61cffe93e64e46"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.4/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "eeeaae4a5337b6b83feeb482d11efb0e659c573f"
      },
      "samples": [
        {
          "displayName": "Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "path": "Samples~/Gestures"
        },
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "dist": {
        "shasum": "0b1480e8337ca5ff7169b690bbb85980fa7d770e",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.4.3.tgz"
      }
    },
    "1.5.0-pre.3": {
      "name": "com.unity.xr.hands",
      "version": "1.5.0-pre.3",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1",
        "com.unity.mathematics": "1.2.6"
      },
      "unity": "2021.3",
      "_upm": {
        "changelog": "### Added\n- Added public `subsystem` property to `XRHandTrackingEvents` to let users get the `XRHandSubsystem` that is the source of the hand tracking data. Also added public `subsystem` property to `XRHandJointsUpdatedEventArgs` so it is available in the `XRHandTrackingEvents.jointsUpdated` event callback.\n\n### Fixed\n- Fixed reference direction when using `XRHandUserRelativeDirection.NoseDirection` for gesture detection."
      },
      "upmCi": {
        "footprint": "55beba2bf2082186c294660e36ebb4bf43c92611"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.5/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "79f3a02078a178ecc5dafbcef1b9269535bdfda3"
      },
      "samples": [
        {
          "displayName": "Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "path": "Samples~/Gestures"
        },
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "dist": {
        "shasum": "ab6f1781ac3203e194773abffa5446c90151bec7",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.5.0-pre.3.tgz"
      }
    },
    "1.4.1": {
      "name": "com.unity.xr.hands",
      "version": "1.4.1",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1",
        "com.unity.mathematics": "1.2.6"
      },
      "unity": "2021.3",
      "_upm": {
        "changelog": "### Changed\n- Split hand pose debug UI into hand shape and hand pose to make it simpler to debug in each scenario.\n- Updated hand shape debugger with added cross and check mark icon sprites for finger state gesture debug UI\n\n### Fixed\n- Fixed performance regression in hand gesture debug UI.\n- Fix tolerance range check in `XRFingerShapeCondition` component."
      },
      "upmCi": {
        "footprint": "bc389580f9a3bf6d85f4d786192320a9cb3f89bd"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.4/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "9819522796e7fbd1f8a7e13879de250f66ff40d1"
      },
      "samples": [
        {
          "displayName": "Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "path": "Samples~/Gestures"
        },
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "dist": {
        "shasum": "9491a3326e61014fe407d230aa0205055496f967",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.4.1.tgz"
      }
    },
    "1.5.0-pre.1": {
      "name": "com.unity.xr.hands",
      "version": "1.5.0-pre.1",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1",
        "com.unity.mathematics": "1.2.6"
      },
      "unity": "2021.3",
      "_upm": {
        "changelog": "### Added\n- Added `XRCommonHandGestures` and surfaced related data from the OpenXR Hand Interaction Profile extension."
      },
      "upmCi": {
        "footprint": "3c1137e6e7cb7b281dc298e09819fefc174bdd68"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.5/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "95b72333c059cd8048639e833facbee876cf11ae"
      },
      "samples": [
        {
          "displayName": "Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "path": "Samples~/Gestures"
        },
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "dist": {
        "shasum": "60a66c6c20f30a9309669e52c0da252f8aa0cf6c",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.5.0-pre.1.tgz"
      }
    },
    "1.4.0": {
      "name": "com.unity.xr.hands",
      "version": "1.4.0",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1",
        "com.unity.mathematics": "1.2.6"
      },
      "unity": "2021.3",
      "_upm": {
        "changelog": "### Changed\n- Changed gesture detection to allow both upper and lower threshold for more finely-tuned configuration of the finger shapes.\n- Added partial-grab gesture detection to the Gestures sample.\n- Changed hand and gesture tracking debug UI to support upper threshold, lower theshold, and partial-grab gesture.\n- Updated visuals for hand and gesture tracking debug UI in the Gestures sample.\n\n### Fixed\n- Fixed compilation errors on tvOS platform where `ENABLE_VR` is not defined."
      },
      "upmCi": {
        "footprint": "971fef9b0772f85cf4b8958c94b66ced74a75a93"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.4/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "fe5bc832bb00abf0d2351243f0d628d63ed9f045"
      },
      "samples": [
        {
          "displayName": "Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "path": "Samples~/Gestures"
        },
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "dist": {
        "shasum": "619dfe345db418a5fa9baf7b310cc0752626cd1e",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.4.0.tgz"
      }
    },
    "1.4.0-pre.1": {
      "name": "com.unity.xr.hands",
      "version": "1.4.0-pre.1",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1",
        "com.unity.mathematics": "1.2.6"
      },
      "unity": "2021.3",
      "_upm": {
        "changelog": "### Added\n- Added support for custom gestures. For additional information, refer to the [manual documentation](xref:xrhands-custom-gestures).\n\n### Fixed\n- OpenXR implementation now correctly responds to feature lifecycle callbacks."
      },
      "upmCi": {
        "footprint": "097982041dc932785ccc5d847172b2f772501e1d"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.4/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "4b6490faab4912d93bf26b97d25e22554452bf7a"
      },
      "samples": [
        {
          "displayName": "Gestures",
          "description": "Sample showing how to detect and debug hand gestures.",
          "path": "Samples~/Gestures"
        },
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "dist": {
        "shasum": "f8215cf275b01d18ff03474093b4451eb78989fd",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.4.0-pre.1.tgz"
      }
    },
    "1.3.0": {
      "name": "com.unity.xr.hands",
      "version": "1.3.0",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "unity": "2021.3",
      "_upm": {
        "changelog": "### Added\n- Added a root pose offset to the `XRHandSkeletonDriver` that allows an additional offset to the root pose (typically the wrist). This is useful for situations where you want the visual hand representation to stop while interacting with objects in a scene.\n- Added missing sample script API documentation to make it easier to understand and build from.\n\n### Fixed\n- Fixed documentation links for OpenXR features to point at latest documentation version."
      },
      "upmCi": {
        "footprint": "0bbae55093ac58c7fd5d935ba6abc59f0dd7f844"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.3/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "3c7b72f0abeabbe733ac0f37b40f5560a732ceda"
      },
      "samples": [
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "dist": {
        "shasum": "255a58475da26b9ec7275d02f8b36cbbc1f14bb2",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.3.0.tgz"
      }
    },
    "1.2.1": {
      "name": "com.unity.xr.hands",
      "version": "1.2.1",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.4.3",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "unity": "2021.3",
      "samples": [
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Fixed\n- Fixed build pipeline that caused `UnityOpenXRHands` assembly to get skipped."
      },
      "upmCi": {
        "footprint": "07b78b2d1075836984b7992eff696faf21517d94"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.2/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "1747736627634d3431597c1ae3d1ee7bc9cf1901"
      },
      "dist": {
        "shasum": "d8d5ee5371297746e920b367b64110f65530752f",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.2.1.tgz"
      }
    },
    "1.2.0": {
      "name": "com.unity.xr.hands",
      "version": "1.2.0",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.4.3",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.management": "4.0.1"
      },
      "unity": "2021.3",
      "samples": [
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Added\n\n- Added `IXRHandProcessor` interface that intercepts and allows post-processing joint data before being used by other scripts. More information can be found on the [XR Hands Joint Processing](../manual/process-joints.md) manual page.\n- Added two samples to the Hand Visualizer sample for how to use the new Joint Processing feature to change the visual output of hand tracking.\n- `XRHand` and `XRHandJoint` both now implement `IEquatable`, and have `Equals`, `GetHashCode`, and the `==` and `!=` operators overloaded.\n- Added `XRHandTrackingEvents` component that subscribes to hand tracking events for a specific hand and surfaces Unity Events when the hand updates or tracking state changes.\n- Added `XRHandMeshController` component that subscribes to events from a `XRHandTrackingEvents` and can optionally show or hide a mesh.\n- Added `XRHandSkeletonDriver` component that subscribes to events from a `XRHandTrackingEvents` and updates a hierarchy of Transforms for each `XRHandJoint`.\n\n### Changed\n- Minimum supported Unity Editor version has changed to 2021.3.\n\n### Fixed\n\n- Fixed Hand Visualizer component so it will use another running `XRHandSubsystem` if the first is stopped.\n- Fixed exception in Hand Visualizer component when a joint is invalid.\n- Fixed rendering of lines that connect joints in `HandVisualizer` sample when used with the device simulator. Also removed the Origin property from the component since it was no longer used."
      },
      "upmCi": {
        "footprint": "f2cb3aa2052ca937bb96e96012cf466b3a245898"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.2/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "3a2c98b05912caa06a643511c97a542eb868e8a9"
      },
      "dist": {
        "shasum": "b90983b3686ac5538d41d60b47610e2979547400",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.2.0.tgz"
      }
    },
    "1.1.0": {
      "name": "com.unity.xr.hands",
      "version": "1.1.0",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.4.3",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.management": "4.0.1"
      },
      "unity": "2020.3",
      "samples": [
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Added\n\n- Added `isTracked` to `XRHand`.\n- Added `trackingAcquired` and `trackingLost` to `XRHandSubsystem`.\n- Added `XRHandDevice` and automatic managing of it if the Input System is enabled and hand-tracking is enabled in the target platform's build settings.\n- The `HandVisualizer` sample now opts into using optimized controls in the Input System if you enable the **Use Optimized Controls** option. You must be on at least version 1.5.0 of the Input System package for this to have an effect.\n- Added `handedness` getter property to `XRHandJoint`.\n- Added `updateSuccessFlags` property to `XRHandSubsystem` to allow the most recent `UpdateSuccessFlags` to be polled. This value matches the argument to the `updatedHands` callback.\n\nThe OpenXR package must be installed and enabled for these to work:\n- Added OpenXR support through `HandTracking` and `OpenXRHandProvider` types.\n- Added support for Meta Hand Tracking Aim extension in OpenXR through `MetaHandTrackingAim`.\n\n### Changed\n\n- `MetaAimHand` and `MetaAimFlags` have been moved outside of the `MetaHandTrackingAim` type and moved from the `UnityEngine.XR.Hands.OpenXR` namespace to `UnityEngine.XR.Hands`. The same input bindings will work the same as before.\n- The HandVisualizer sample meshes has been updated.\n- Changed Hand Visualizer component so it skips setting the shared material on the instantiated hand mesh prefabs when the Hand Mesh Material property is not set.\n- Providers must now create joints with a known `Handedness` during `TryUpdateHands` when calling `XRHandProviderUtility.CreateJoint`.\n- Changed Meta Aim Hand input devices that are added to the Input System to continue updating the `devicePosition` and `deviceRotation` controls even when the `MetaAimFlags.Valid` bit flag is not set. Instead it uses whether the hand root is valid. In practice, the `MetaAimFlags.Valid` flag currently does not necessarily indicate whether the pose is valid but instead is based on whether the user is in a natural orientation for distant UI panel selection.\n- Changed HandVisualizer sample by adding an Assembly Definition file (`.asmdef`).\n\n### Fixed\n\n- Fixed issue where OpenXR would incorrectly report joints as having updated when they weren't actually tracked that frame. `XRHandSubsystem`'s `trackingAcquired` and `trackingLost`, as well as `XRHand.isTracked`, will now work as expected.\n- Fixed issue where `<XRHandDevice>/isTracked` and `<XRHandDevice>/trackingState` controls would never clear.\n- Fixed `XRHandDevice` and `MetaAimHand` to also include `InputDeviceCharacteristics.TrackedDevice` in the `XRDeviceDescriptor`.\n- Fixed lifetime of GameObjects in `HandVisualizer` sample.\n- Fixed `HandVisualizer` so it uses the `XROrigin.Origin` property instead of the Transform of the `XROrigin` itself when transforming joints.\n- Reinstated the validation rule that the Meta Touch Interaction Profile is required in the OpenXR Interaction Profiles list.\n- OpenXR hand root poses now match the wrist, not the palm."
      },
      "upmCi": {
        "footprint": "608e5f74a4eee9aa2e993e9696cc7f542ac2bb1a"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.1/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "4cabf8b9828ca84256a180af37950cd5c5a0e5dd"
      },
      "dist": {
        "shasum": "5f5754045a7ad5ff2df55f9436f2e5622e18d9cf",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.1.0.tgz"
      }
    },
    "1.1.0-pre.3": {
      "name": "com.unity.xr.hands",
      "version": "1.1.0-pre.3",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.4.3",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.management": "4.0.1"
      },
      "unity": "2020.3",
      "samples": [
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Added\n\n- The `HandVisualizer` sample now opts into using optimized controls in the Input System. You must be on at least version 1.5.0 of the Input System package for this to have an effect.\n\n### Changed\n\n- `MetaAimHand` and `MetaAimFlags` have been moved outside of the `MetaHandTrackingAim` type and moved from the `UnityEngine.XR.Hands.OpenXR` namespace to `UnityEngine.XR.Hands`. The same input bindings will work the same as before.\n- The HandVisualizer sample meshes has been updated.\n\n### Fixed\n\n- Fixed issue where OpenXR would incorrectly report joints as having updated when they weren't actually tracked that frame. `XRHandSubsystem`'s `trackingAcquired` and `trackingLost`, as well as `XRHand.isTracked`, will now work as expected.\n- Fixed lifetime of `GameObject`s in `HandVisualizer` sample.\n- Reinstated the validation rule that the Meta Touch Interaction Profile is required in the OpenXR Interaction Profiles list."
      },
      "upmCi": {
        "footprint": "a6896e67deea26da7d88c810111383043e248c42"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.1/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "4b522cb7297b444be543fad211b01a2f105c9330"
      },
      "dist": {
        "shasum": "704ac648f65fbabf8f5e7896c90b6b0760560d55",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.1.0-pre.3.tgz"
      }
    },
    "1.1.0-pre.2": {
      "name": "com.unity.xr.hands",
      "version": "1.1.0-pre.2",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.inputsystem": "1.4.3",
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.management": "4.0.1"
      },
      "unity": "2020.3",
      "samples": [
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "_upm": {
        "changelog": "### Added\n\n- Added `isTracked` to `XRHand`.\n- Added `trackingAcquired` and `trackingLost` to `XRHandSubsystem`.\n- Added `XRHandDevice` and automatic managing of it if the Input System is enabled and hand-tracking is enabled in the target platform's build settings.\n\nThe OpenXR package must be installed and enabled for these to work:\n- Added OpenXR support through `HandTracking` and `OpenXRHandProvider` types.\n- Added support for Meta Hand Tracking Aim extension in OpenXR through `MetaHandTrackingAim`."
      },
      "upmCi": {
        "footprint": "d55525aa00c2a79a272b94b44f35b7325c563bcb"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.hands@1.1/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "ae3454a8240c313ea3f95ecfd2d9aebc080b0626"
      },
      "dist": {
        "shasum": "ecbdfd9859ec3ec4407d9b58eafacc247d2f392f",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.1.0-pre.2.tgz"
      }
    },
    "1.0.0-pre.2": {
      "name": "com.unity.xr.hands",
      "version": "1.0.0-pre.2",
      "displayName": "XR Hands",
      "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
      "keywords": [
        "xr",
        "vr",
        "virtual",
        "reality",
        "hand",
        "tracking",
        "hands",
        "subsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.xr": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0"
      },
      "unity": "2020.3",
      "samples": [
        {
          "displayName": "HandVisualizer",
          "description": "Basic sample showing how visualize hands.",
          "path": "Samples~/HandVisualizer"
        }
      ],
      "upmCi": {
        "footprint": "7d103714b46e808ffe88613efc90d1e06e291d48"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.xr.hands.git",
        "type": "git",
        "revision": "1d0d38d59523beef6a61be3a6b4b82f0d54b92ce"
      },
      "dist": {
        "shasum": "412b9d185b3595ae7da6182d146bf88d446a9861",
        "tarball": "https://download-packages.unity.cn/com.unity.xr.hands/-/com.unity.xr.hands-1.0.0-pre.2.tgz"
      }
    }
  },
  "etag": "\"f6fd59e33f6c3bf1c49f88fcea5f3d77\"",
  "provider": "upm",
  "name": "com.unity.xr.hands",
  "description": "Surfaces the cross-platform subsystem API for hand-tracking. Implementations of providers will be found in the package for that platform.",
  "_id": "com.unity.xr.hands",
  "cnTags": [],
  "time": {
    "1.6.2": "2025-10-10T03:25:32Z",
    "1.7.0-pre.1": "2025-08-13T03:26:06Z",
    "1.7.0-pre.2": "2025-08-13T03:26:02Z",
    "1.6.1": "2025-07-24T03:25:02Z",
    "1.6.0": "2025-06-28T03:25:01Z",
    "1.6.0-pre.3": "2025-05-16T03:26:02Z",
    "1.5.1": "2025-04-17T03:26:01Z",
    "1.6.0-pre.2": "2025-04-12T03:25:01Z",
    "1.6.0-pre.1": "2025-04-10T03:24:31Z",
    "1.5.0": "2024-09-27T10:37:32Z",
    "1.5.0-pre.4": "2024-09-16T16:40:15Z",
    "1.4.3": "2024-09-16T16:40:13Z",
    "1.5.0-pre.3": "2024-06-10T08:32:21Z",
    "1.4.1": "2024-04-22T09:16:19Z",
    "1.5.0-pre.1": "2024-02-29T16:19:28Z",
    "1.4.0": "2024-02-29T16:19:26Z",
    "1.4.0-pre.1": "2023-11-29T15:57:11Z",
    "1.3.0": "2023-08-22T15:58:21Z",
    "1.2.1": "2023-06-01T13:36:42Z",
    "1.2.0": "2023-05-30T15:19:12Z",
    "1.1.0": "2023-03-21T17:25:39Z",
    "1.1.0-pre.3": "2023-02-23T16:56:06Z",
    "1.1.0-pre.2": "2022-12-14T23:02:08Z",
    "1.0.0-pre.2": "2022-11-11T10:52:29Z"
  }
}
